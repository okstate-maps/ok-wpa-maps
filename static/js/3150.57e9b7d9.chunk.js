"use strict";(self.webpackChunkok_wpa_maps=self.webpackChunkok_wpa_maps||[]).push([[3150],{23150:(e,t,r)=>{r.r(t),r.d(t,{getGeometryServiceURL:()=>v,projectGeometry:()=>S});var o=r(42265),n=r(10064),i=r(7575),a=r(76200),s=r(25243),l=r(77981),u=r(23084),c=r(35594),f=r(27366),m=r(46784),p=r(49861),g=(r(63780),r(93169),r(69912)),d=r(92975);let h=class extends m.wq{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((e=>e.toJSON())),t=this.geometries[0],r={};return r.outSR=(0,d.B9)(this.outSpatialReference),r.inSR=(0,d.B9)(t.spatialReference),r.geometries=JSON.stringify({geometryType:(0,l.Ji)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};(0,f._)([(0,p.Cb)()],h.prototype,"geometries",void 0),(0,f._)([(0,p.Cb)({json:{read:{source:"outSR"}}})],h.prototype,"outSpatialReference",void 0),(0,f._)([(0,p.Cb)()],h.prototype,"transformation",void 0),(0,f._)([(0,p.Cb)()],h.prototype,"transformForward",void 0),h=(0,f._)([(0,g.j)("esri.rest.support.ProjectParameters")],h);const y=h,w=(0,s.se)(y);async function v(){var e;let t,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1?arguments[1]:void 0;if(o.default.geometryServiceUrl)return o.default.geometryServiceUrl;if(!r)throw new n.Z("internal:geometry-service-url-not-configured");t="portal"in r?r.portal||i.Z.getDefault():r,await t.load({signal:a});const s=null===(e=t.helperServices)||void 0===e||null===(e=e.geometry)||void 0===e?void 0:e.url;if(!s)throw new n.Z("internal:geometry-service-url-not-configured");return s}async function S(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3?arguments[3]:void 0;const i=await v(r,o),s=new y;s.geometries=[e],s.outSpatialReference=t;const f=await async function(e,t,r){t=w(t);const o=(0,u.en)(e),n={...o.query,f:"json",...t.toJSON()},i=t.outSpatialReference,s=(0,l.Ji)(t.geometries[0]),f=(0,u.lA)(n,r);return(0,a.Z)(o.path+"/project",f).then((e=>{let{data:{geometries:t}}=e;return(0,c.o)(t,s,i)}))}(i,s,{signal:o});if(f&&Array.isArray(f)&&1===f.length)return f[0];throw new n.Z("internal:geometry-service-projection-failed")}}}]);
//# sourceMappingURL=3150.57e9b7d9.chunk.js.map