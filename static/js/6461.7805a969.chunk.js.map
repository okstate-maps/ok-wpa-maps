{"version":3,"file":"static/js/6461.7805a969.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import r from\"../../geometry/support/GeographicTransformation.js\";import e from\"./PixelBlock.js\";import{decode as t}from\"./rasterFormats/RasterCodec.js\";import{split as s,mosaic as o,approximateTransform as i,getLocalArithmeticNorthRotations as n}from\"./rasterFunctions/pixelUtils.js\";import{create as a}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as l,load as m,getProjectionOffsetGrid as c}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as f,estimateStatisticsHistograms as p}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as u,convertToLocalDirections as S}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as d}from\"./rasterTransforms/utils.js\";import y from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import h from\"../../geometry/Extent.js\";import O from\"../../geometry/Point.js\";class N{convertVectorFieldData(r){const t=e.fromJSON(r.pixelBlock),s=u(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=e.fromJSON(r.pixelBlock),s=f(t);return Promise.resolve(s)}async decode(r){const e=await t(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?h.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=y.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=a(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:h.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?e.fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?O.fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(r){const t=p(e.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=o(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let a,l=s;return r.coefs&&(l=i(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(a=n(r.destDimension,r.gcsGrid),l=S(l,r.isUV?\"vector-uv\":\"vector-magdir\",a)),{pixelBlock:l?.toJSON(),localNorthDirections:a}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await x(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=h.fromJSON(e.projectedExtent),s=h.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new r({steps:e.datumTransformationSteps})),(e.includeGCSGrid||l(t.spatialReference,s.spatialReference,o))&&await m();const i=e.rasterTransform?d(e.rasterTransform):null;return c({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{N as default};\n"],"names":["N","convertVectorFieldData","r","t","e","fromJSON","pixelBlock","s","u","type","Promise","resolve","toJSON","computeStatisticsHistograms","f","decode","data","options","symbolize","extent","h","this","symbolizer","updateSymbolizer","_this$symbolizer","y","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","rasterFunction","a","rasterFunctionJSON","process","_r$primaryPixelSizes","primaryPixelBlocks","map","primaryPixelSizes","O","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","p","split","tileSize","maximumPyramidLevel","forEach","set","mosaicAndTransform","_l","srcPixelBlocks","o","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","l","coefs","i","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","n","S","isUV","localNorthDirections","createFlowMesh","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","x","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","getProjectionOffsetGrid","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","m","rasterTransform","d","c","datumTransformation"],"sourceRoot":""}