{"version":3,"file":"static/js/4510.b81618cd.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/chunks/vec4f32.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushOverlay.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushPieChart.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js","../node_modules/@arcgis/core/views/2d/engine/brushes.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushDotDensity.js","../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js","../node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js","../node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js","../node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js","../node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js","../node_modules/@arcgis/core/views/webgl/heatmapTextureUtils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushHeatmap.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js","../node_modules/@arcgis/core/views/2d/engine/webgl/color.js","../node_modules/@arcgis/core/views/2d/engine/webgl/effects/Effect.js","../node_modules/@arcgis/core/views/2d/engine/webgl/enums.js","../node_modules/@arcgis/core/views/2d/engine/webgl/number.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/Technique.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/dotDensity/TechniqueDotDensity.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/heatmap/TechniqueHeatmap.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/pieChart/TechniquePieChart.js","../node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js","../node_modules/@arcgis/core/views/webgl/capabilities/isWebGL2Context.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(4)}function t(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r(n,t,r,e){const a=new Float32Array(4);return a[0]=n,a[1]=t,a[2]=r,a[3]=e,a}function e(n,t){return new Float32Array(n,t,4)}function a(){return n()}function o(){return r(1,1,1,1)}function u(){return r(1,0,0,0)}function s(){return r(0,1,0,0)}function c(){return r(0,0,1,0)}function i(){return r(0,0,0,1)}const f=a(),l=o(),_=u(),y=s(),w=c(),N=i(),O=Object.freeze(Object.defineProperty({__proto__:null,ONES:l,UNIT_W:N,UNIT_X:_,UNIT_Y:y,UNIT_Z:w,ZEROS:f,clone:t,create:n,createView:e,fromValues:r,ones:o,unitW:i,unitX:u,unitY:s,unitZ:c,zeros:a},Symbol.toStringTag,{value:\"Module\"}));export{l as O,_ as U,f as Z,n as a,e as b,t as c,s as d,c as e,r as f,i as g,y as h,w as i,N as j,o,u,O as v,a as z};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../chunks/vec4f32.js\";import{createProgramDescriptor as r}from\"../Utils.js\";import t from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{StencilOperation as o,CompareFunction as a,PrimitiveType as i,DataType as n}from\"../../../../webgl/enums.js\";import{createProgram as m}from\"../../../../webgl/ProgramTemplate.js\";const l=()=>r(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT}]});class p extends t{constructor(){super(...arguments),this._color=e(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:e}){e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setFaceCullingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),e.setStencilWriteMask(255),e.setStencilFunction(a.ALWAYS,0,255)}draw(e,r){const{context:t,state:o,requestRender:a,allowDelayedRender:p}=e,c=l(),d=r.getVAO(t,o,c.attributes,c.bufferLayouts);null!=d.indexBuffer&&(this._program||(this._program=m(t,s)),!p||null==a||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",o.displayMat3),t.bindVAO(d),t.drawElements(i.TRIANGLES,d.indexBuffer.size,n.UNSIGNED_INT,0),t.bindVAO()):a())}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{textureBindingBitmap as e}from\"../definitions.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import r from\"./WGLBrush.js\";import{BlendFactor as s,CompareFunction as n,PrimitiveType as o,DataType as a}from\"../../../../webgl/enums.js\";const i=()=>t(\"overlay\",{geometry:[{location:0,name:\"a_pos\",count:2,type:a.FLOAT}],tex:[{location:1,name:\"a_uv\",count:2,type:a.UNSIGNED_SHORT}]});class u extends r{constructor(){super(...arguments),this._desc={vsPath:\"overlay/overlay\",fsPath:\"overlay/overlay\",attributes:new Map([[\"a_pos\",0],[\"a_uv\",1]])}}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(n.GREATER,255,255)}draw(t,r){const{context:s,painter:n,requestRender:a,allowDelayedRender:u}=t;if(!r.isReady)return;const{computedOpacity:c,dvsMat3:l,isWrapAround:d,perspectiveTransform:m,texture:p}=r;t.timeline.begin(this.name);const f=n.materialManager.getProgram(this._desc);if(u&&null!=a&&!f.compiled)return void a();const _=i(),v=r.getVAO(s,_.bufferLayouts,_.attributes);if(!v)return;s.bindVAO(v),s.useProgram(f),s.bindTexture(p,e),f.setUniformMatrix3fv(\"u_dvsMat3\",l),f.setUniform1i(\"u_texture\",e),f.setUniform1f(\"u_opacity\",c),f.setUniform2fv(\"u_perspective\",m);const y=d?10:4;s.drawArrays(o.TRIANGLE_STRIP,0,y),s.bindVAO(),t.timeline.end(this.name)}}export{u as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{maxRepresentableInt as e,tileSize as t}from\"../definitions.js\";import{WGLGeometryType as o,WGLSymbologyType as r}from\"../enums.js\";import{createProgramDescriptor as a}from\"../Utils.js\";import i from\"./WGLGeometryBrush.js\";import{FillMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as s}from\"../techniques/utils.js\";import{PrimitiveType as l,DataType as m}from\"../../../../webgl/enums.js\";function u(e){const t={geometry:[{location:0,name:\"a_pos\",count:2,type:m.SHORT},{location:1,name:\"a_id\",count:3,type:m.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:m.UNSIGNED_BYTE},{location:3,name:\"a_color\",count:4,type:m.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_aux1\",count:4,type:m.UNSIGNED_SHORT},{location:5,name:\"a_aux2\",count:4,type:m.SHORT},{location:6,name:\"a_aux3\",count:4,type:m.UNSIGNED_BYTE},{location:7,name:\"a_zoomRange\",count:2,type:m.UNSIGNED_SHORT}]};switch(e.symbologyType){case r.SIMPLE:case r.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:\"materials/fill\",vertexLayout:t}}class c extends i{dispose(){}getGeometryType(){return o.FILL}supportsSymbology(e){return e!==r.DOT_DENSITY}drawGeometry(o,r,i,m){const{context:c,painter:f,rendererInfo:p,requiredLevel:y,passOptions:_,requestRender:d,allowDelayedRender:E}=o,g=n.load(i.materialKey),N=s(g.data),S=null!=_&&\"hittest\"===_.type,T=f.materialManager,{shader:I,vertexLayout:U,hittestAttributes:x}=N.programSpec??u(g);let h=l.TRIANGLES,L=a(g.data,U);S&&(L=this._getTriangleDesc(i.materialKey,L,x),h=l.POINTS);const{attributes:O,bufferLayouts:G}=L,D=T.getMaterialProgram(o,g,I,O,m);if(E&&null!=d&&!D.compiled)return void d();c.useProgram(D),this._setSharedUniforms(D,o,r);const{row:b,col:R}=r.key,M=R*t,w=b*t;if(D.setUniform2f(\"u_tileOffset\",M%e,w%e),D.setUniform2f(\"u_maxIntNumOfCrossing\",Math.floor(M/e),Math.floor(w/e)),g.textureBinding){f.textureManager.bindTextures(c,D,g);const e=1/2**(y-r.key.level);D.setUniform1f(\"u_zoomFactor\",e)}const j=1/o.pixelRatio;D.setUniform1f(\"u_blur\",j),D.setUniform1f(\"u_antialiasing\",j),this._setSizeVVUniforms(g,D,p,r),this._setColorAndOpacityVVUniforms(g,D,p);const B=i.target.getVAO(c,G,O,S);let A=i.indexCount,F=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;S&&(A/=3,F/=3),c.bindVAO(B),this._drawFills(o,r,D,h,A,F)}_drawFills(e,t,o,r,a,i){e.context.drawElements(r,a,m.UNSIGNED_INT,i)}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{WGLSymbologyType as o}from\"../enums.js\";import r from\"./WGLGeometryBrushMarker.js\";import{assertRendererSchema as e}from\"../techniques/utils.js\";import{DataType as t}from\"../../../../webgl/enums.js\";class s extends r{supportsSymbology(r){return r===o.PIE_CHART}_drawMarkers(o,r,s,n,l,f,u){const{context:i}=o,{rendererInfo:m}=o,{rendererSchema:a}=m;e(a,\"pie-chart\"),s.setUniform4fv(\"u_colors\",a.colors),s.setUniform4fv(\"u_defaultColor\",a.defaultColor),s.setUniform4fv(\"u_othersColor\",a.othersColor),s.setUniform4fv(\"u_outlineColor\",a.outlineColor),s.setUniform1f(\"u_donutRatio\",a.holePercentage),s.setUniform1f(\"u_sectorThreshold\",a.sectorThreshold),s.setUniform1f(\"u_outlineWidth\",a.outlineWidth),i.drawElements(n,l,t.UNSIGNED_INT,f)}}export{s as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{nextPowerOfTwo as t}from\"../../../../../core/mathUtils.js\";import{c as e}from\"../../../../../chunks/mat3f32.js\";import{f as r}from\"../../../../../chunks/vec4f32.js\";import{vtlTextureBindingUnitSprites as o,vtlHighResCutoff as i}from\"../definitions.js\";import{WGLDrawPhase as s}from\"../enums.js\";import{u32to4Xu8 as a}from\"../number.js\";import n from\"./WGLBrush.js\";import{BufferObject as c}from\"../../../../webgl/BufferObject.js\";import{TextureSamplingMode as l,CompareFunction as m,PrimitiveType as f,Usage as u}from\"../../../../webgl/enums.js\";import{VertexArrayObject as p}from\"../../../../webgl/VertexArrayObject.js\";class _ extends n{constructor(){super(...arguments),this._color=r(1,0,0,1),this._patternMatrix=e(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,r){const{context:n,painter:c,styleLayerUID:u,requestRender:p,allowDelayedRender:_}=e;this._loadWGLResources(e);const d=e.displayLevel,h=e.styleLayer,g=h.backgroundMaterial,v=c.vectorTilesMaterialManager,y=h.getPaintValue(\"background-color\",d),b=h.getPaintValue(\"background-opacity\",d),x=h.getPaintValue(\"background-pattern\",d),M=void 0!==x,j=y[3]*b,U=1|window.devicePixelRatio,w=e.spriteMosaic;let L,A;const P=U>i?2:1,I=e.drawPhase===s.HITTEST,R=this._programOptions;R.id=I,R.pattern=M;const k=v.getMaterialProgram(n,g,R);if(!_||null==p||k.compiled){if(n.bindVAO(this._vao),n.useProgram(k),M){const t=w.getMosaicItemPosition(x,!0);if(null!=t){const{tl:e,br:r,page:i}=t;L=r[0]-e[0],A=r[1]-e[1];const s=w.getPageSize(i);null!=s&&(w.bind(n,l.LINEAR,i,o),k.setUniform4f(\"u_tlbr\",e[0],e[1],r[0],r[1]),k.setUniform2fv(\"u_mosaicSize\",s),k.setUniform1i(\"u_texture\",o))}k.setUniform1f(\"u_opacity\",b)}else this._color[0]=j*y[0],this._color[1]=j*y[1],this._color[2]=j*y[2],this._color[3]=j,k.setUniform4fv(\"u_color\",this._color);if(k.setUniform1f(\"u_depth\",h.z||0),I){const t=a(u+1);k.setUniform4fv(\"u_id\",t)}for(const e of r){if(k.setUniform1f(\"u_coord_range\",e.rangeX),k.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),M){const r=Math.max(2**(Math.round(d)-e.key.level),1),o=P*e.width*r,i=o/t(L),s=o/t(A);this._patternMatrix[0]=i,this._patternMatrix[4]=s,k.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}n.setStencilFunction(m.EQUAL,0,255),n.drawArrays(f.TRIANGLE_STRIP,0,4)}}else p()}_loadWGLResources(t){if(this._vao)return;const{context:e,styleLayer:r}=t,o=r.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=c.createVertex(e,u.STATIC_DRAW,i),a=new p(e,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:s});this._vao=a}}export{_ as WGLBrushVTLBackground};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import{WGLDrawPhase as t}from\"../enums.js\";import{u32to4Xu8 as r}from\"../number.js\";import i from\"./WGLBrush.js\";import{CompareFunction as n,PrimitiveType as a,DataType as s}from\"../../../../webgl/enums.js\";class o extends i{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(i,o){const{context:l,displayLevel:c,requiredLevel:u,state:d,drawPhase:f,painter:m,spriteMosaic:p,styleLayerUID:y,requestRender:v,allowDelayedRender:g}=i;if(!o.some((e=>e.layerData.get(y)?.circleIndexCount??!1)))return;const E=i.styleLayer,M=E.circleMaterial,T=m.vectorTilesMaterialManager,I=1.2,U=E.getPaintValue(\"circle-translate\",c),_=E.getPaintValue(\"circle-translate-anchor\",c),x=f===t.HITTEST,R=this._programOptions;R.id=x;const h=T.getMaterialProgram(l,M,R);if(g&&null!=v&&!h.compiled)return void v();l.useProgram(h),h.setUniformMatrix3fv(\"u_displayMat3\",_===e.VIEWPORT?d.displayMat3:d.displayViewMat3),h.setUniform2fv(\"u_circleTranslation\",U),h.setUniform1f(\"u_depth\",E.z),h.setUniform1f(\"u_antialiasingWidth\",I);let D=-1;if(x){const e=r(y+1);h.setUniform4fv(\"u_id\",e)}for(const e of o){if(!e.layerData.has(y))continue;e.key.level!==D&&(D=e.key.level,M.setDataUniforms(h,c,E,D,p));const t=e.layerData.get(y);if(!t.circleIndexCount)continue;t.prepareForRendering(l);const r=t.vao;null!=r&&(l.bindVAO(r),h.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),u!==e.key.level?l.setStencilFunction(n.EQUAL,e.stencilRef,255):l.setStencilFunction(n.GREATER,255,255),l.drawElements(a.TRIANGLES,t.circleIndexCount,s.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.circleIndexStart),e.triangleCount+=t.circleIndexCount/3)}}}export{o as WGLBrushVTLCircle};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as t}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as e,vtlHighResCutoff as i}from\"../definitions.js\";import{WGLDrawPhase as n}from\"../enums.js\";import{u32to4Xu8 as a}from\"../number.js\";import r from\"./WGLBrush.js\";import{TextureSamplingMode as l,CompareFunction as o,PrimitiveType as s,DataType as f}from\"../../../../webgl/enums.js\";const u=1/65536;class d extends r{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:r,renderPass:l,spriteMosaic:o,styleLayerUID:s}=t;let f=!1;for(const n of e)if(n.layerData.has(s)){const t=n.layerData.get(s);if(t.fillIndexCount>0||t.outlineIndexCount>0){f=!0;break}}if(!f)return;const u=t.styleLayer,d=u.getPaintProperty(\"fill-pattern\"),c=void 0!==d,m=c&&d.isDataDriven;let p;if(c&&!m){const t=d.getValue(i);p=o.getMosaicItemPosition(t,!0)}const y=!c&&u.getPaintValue(\"fill-antialias\",i);let g=!0,_=1;if(!c){const t=u.getPaintProperty(\"fill-color\"),e=u.getPaintProperty(\"fill-opacity\");if(!t?.isDataDriven&&!e?.isDataDriven){const t=u.getPaintValue(\"fill-color\",i);_=u.getPaintValue(\"fill-opacity\",i)*t[3],_>=1&&(g=!1)}}if(g&&\"opaque\"===l)return;let E;r===n.HITTEST&&(E=a(s+1));const v=u.getPaintValue(\"fill-translate\",i),M=u.getPaintValue(\"fill-translate-anchor\",i);(g||\"translucent\"!==l)&&this._drawFill(t,s,u,e,v,M,c,p,m,E);const P=!u.hasDataDrivenOutlineColor&&u.outlineUsesFillColor&&_<1;y&&\"opaque\"!==l&&!P&&this._drawOutline(t,s,u,e,v,M,E)}_drawFill(a,r,d,c,m,p,y,g,_,E){if(y&&!_&&null==g)return;const{context:v,displayLevel:M,state:P,drawPhase:I,painter:T,pixelRatio:U,spriteMosaic:x,requestRender:D,allowDelayedRender:h}=a,S=d.fillMaterial,R=T.vectorTilesMaterialManager,w=U>i?2:1,N=I===n.HITTEST,L=this._fillProgramOptions;L.id=N,L.pattern=y;const A=R.getMaterialProgram(v,S,L);if(h&&null!=D&&!A.compiled)return void D();if(v.useProgram(A),null!=g){const{page:t}=g,i=x.getPageSize(t);null!=i&&(x.bind(v,l.LINEAR,t,e),A.setUniform2fv(\"u_mosaicSize\",i),A.setUniform1i(\"u_texture\",e))}A.setUniformMatrix3fv(\"u_displayMat3\",p===t.VIEWPORT?P.displayMat3:P.displayViewMat3),A.setUniform2fv(\"u_fillTranslation\",m),A.setUniform1f(\"u_depth\",d.z+u),N&&A.setUniform4fv(\"u_id\",E);let V=-1;for(const t of c){if(!t.layerData.has(r))continue;t.key.level!==V&&(V=t.key.level,S.setDataUniforms(A,M,d,V,x));const i=t.layerData.get(r);if(!i.fillIndexCount)continue;i.prepareForRendering(v);const n=i.fillVAO;if(null!=n){if(v.bindVAO(n),A.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),v.setStencilFunction(o.EQUAL,t.stencilRef,255),y){const e=Math.max(2**(Math.round(M)-t.key.level),1),i=t.rangeX/(w*t.width*e);A.setUniform1f(\"u_patternFactor\",i)}if(_){const t=i.patternMap;if(!t)continue;for(const[i,n]of t){const t=x.getPageSize(i);null!=t&&(x.bind(v,l.LINEAR,i,e),A.setUniform2fv(\"u_mosaicSize\",t),A.setUniform1i(\"u_texture\",e),v.drawElements(s.TRIANGLES,n[1],f.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else v.drawElements(s.TRIANGLES,i.fillIndexCount,f.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart);t.triangleCount+=i.fillIndexCount/3}}}_drawOutline(e,i,a,r,l,d,c){const{context:m,displayLevel:p,state:y,drawPhase:g,painter:_,pixelRatio:E,spriteMosaic:v,requestRender:M,allowDelayedRender:P}=e,I=a.outlineMaterial,T=_.vectorTilesMaterialManager,U=.75/E,x=g===n.HITTEST,D=this._outlineProgramOptions;D.id=x;const h=T.getMaterialProgram(m,I,D);if(P&&null!=M&&!h.compiled)return void M();m.useProgram(h),h.setUniformMatrix3fv(\"u_displayMat3\",d===t.VIEWPORT?y.displayMat3:y.displayViewMat3),h.setUniform2fv(\"u_fillTranslation\",l),h.setUniform1f(\"u_depth\",a.z+u),h.setUniform1f(\"u_outline_width\",U),x&&h.setUniform4fv(\"u_id\",c);let S=-1;for(const t of r){if(!t.layerData.has(i))continue;t.key.level!==S&&(S=t.key.level,I.setDataUniforms(h,p,a,S,v));const e=t.layerData.get(i);if(e.prepareForRendering(m),!e.outlineIndexCount)continue;const n=e.outlineVAO;null!=n&&(m.bindVAO(n),h.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),m.setStencilFunction(o.EQUAL,t.stencilRef,255),m.drawElements(s.TRIANGLES,e.outlineIndexCount,f.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),t.triangleCount+=e.outlineIndexCount/3)}}}export{d as WGLBrushVTLFill};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as t}from\"../definitions.js\";import{WGLDrawPhase as i}from\"../enums.js\";import{u32to4Xu8 as n}from\"../number.js\";import a from\"./WGLBrush.js\";import{TextureSamplingMode as r,CompareFunction as o,PrimitiveType as s,DataType as l}from\"../../../../webgl/enums.js\";class f extends a{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(a,f){const{context:u,displayLevel:m,state:d,drawPhase:c,painter:p,pixelRatio:g,spriteMosaic:y,styleLayerUID:E,requestRender:v,allowDelayedRender:M}=a;if(!f.some((e=>e.layerData.get(E)?.lineIndexCount??!1)))return;const _=a.styleLayer,U=_.lineMaterial,I=p.vectorTilesMaterialManager,P=_.getPaintValue(\"line-translate\",m),T=_.getPaintValue(\"line-translate-anchor\",m),x=_.getPaintProperty(\"line-pattern\"),D=void 0!==x,S=D&&x.isDataDriven;let L,N;if(D&&!S){const e=x.getValue(m);L=y.getMosaicItemPosition(e)}let R=!1;if(!D){const e=_.getPaintProperty(\"line-dasharray\");if(N=void 0!==e,R=N&&e.isDataDriven,N&&!R){const t=e.getValue(m),i=_.getDashKey(t,_.getLayoutValue(\"line-cap\",m));L=y.getMosaicItemPosition(i)}}const V=1/g,h=c===i.HITTEST,w=this._programOptions;w.id=h,w.pattern=D,w.sdf=N;const A=I.getMaterialProgram(u,U,w);if(M&&null!=v&&!A.compiled)return void v();if(u.useProgram(A),A.setUniformMatrix3fv(\"u_displayViewMat3\",d.displayViewMat3),A.setUniformMatrix3fv(\"u_displayMat3\",T===e.VIEWPORT?d.displayMat3:d.displayViewMat3),A.setUniform2fv(\"u_lineTranslation\",P),A.setUniform1f(\"u_depth\",_.z),A.setUniform1f(\"u_antialiasing\",V),h){const e=n(E+1);A.setUniform4fv(\"u_id\",e)}if(L&&null!=L){const{page:e}=L,i=y.getPageSize(e);null!=i&&(y.bind(u,r.LINEAR,e,t),A.setUniform2fv(\"u_mosaicSize\",i),A.setUniform1i(\"u_texture\",t))}let j=-1;for(const e of f){if(!e.layerData.has(E))continue;e.key.level!==j&&(j=e.key.level,U.setDataUniforms(A,m,_,j,y));const i=2**(m-j)/g;A.setUniform1f(\"u_zoomFactor\",i);const n=e.layerData.get(E);if(!n.lineIndexCount)continue;n.prepareForRendering(u);const a=n.vao;if(null!=a){if(u.bindVAO(a),A.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),u.setStencilFunction(o.EQUAL,e.stencilRef,255),S||R){const e=n.patternMap;if(!e)continue;for(const[i,n]of e){const e=y.getPageSize(i);null!=e&&(y.bind(u,r.LINEAR,i,t),A.setUniform2fv(\"u_mosaicSize\",e),A.setUniform1i(\"u_texture\",t),u.drawElements(s.TRIANGLES,n[1],l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else u.drawElements(s.TRIANGLES,n.lineIndexCount,l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n.lineIndexStart);e.triangleCount+=n.lineIndexCount/3}}}}export{f as WGLBrushVTLLine};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{c as e,f as t}from\"../../../../../chunks/vec2f32.js\";import{fadeDuration as i}from\"../../vectorTiles/decluttering/config.js\";import{RotationAlignment as a,SymbolPlacement as r,TranslateAnchor as n}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as s,vtlTextureBindingUnitGlyphs as o}from\"../definitions.js\";import{WGLDrawPhase as l}from\"../enums.js\";import{degToByte as f}from\"../GeometryUtils.js\";import{u32to4Xu8 as c}from\"../number.js\";import u from\"./WGLBrush.js\";import{TextureSamplingMode as p,PrimitiveType as m,DataType as d,CompareFunction as g}from\"../../../../webgl/enums.js\";const y=1/65536;class _ extends u{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=e()}dispose(){}drawMany(e,t){const{drawPhase:i,styleLayerUID:a}=e,r=e.styleLayer;let n;i===l.HITTEST&&(n=c(a+1)),this._drawIcons(e,r,t,n),this._drawText(e,r,t,n)}_drawIcons(e,t,o,c){const{context:u,displayLevel:p,drawPhase:m,painter:d,spriteMosaic:g,state:y,styleLayerUID:_,requestRender:h,allowDelayedRender:M}=e,P=t.iconMaterial,U=d.vectorTilesMaterialManager;let T,E=!1;for(const i of o)if(i.layerData.has(_)&&(T=i.layerData.get(_),T.iconPerPageElementsMap.size>0)){E=!0;break}if(!E)return;const S=t.getPaintValue(\"icon-translate\",p),v=t.getPaintValue(\"icon-translate-anchor\",p);let x=t.getLayoutValue(\"icon-rotation-alignment\",p);x===a.AUTO&&(x=t.getLayoutValue(\"symbol-placement\",p)===r.POINT?a.VIEWPORT:a.MAP);const D=x===a.MAP,I=t.getLayoutValue(\"icon-keep-upright\",p)&&D,R=T.isIconSDF,V=m===l.HITTEST,w=this._iconProgramOptions;w.id=V,w.sdf=R;const A=U.getMaterialProgram(u,P,w);if(M&&null!=h&&!A.compiled)return void h();u.useProgram(A),A.setUniformMatrix3fv(\"u_displayViewMat3\",x===a.MAP?y.displayViewMat3:y.displayMat3),A.setUniformMatrix3fv(\"u_displayMat3\",v===n.VIEWPORT?y.displayMat3:y.displayViewMat3),A.setUniform2fv(\"u_iconTranslation\",S),A.setUniform1f(\"u_depth\",t.z),A.setUniform1f(\"u_mapRotation\",f(y.rotation)),A.setUniform1f(\"u_keepUpright\",I?1:0),A.setUniform1f(\"u_level\",10*p),A.setUniform1i(\"u_texture\",s),A.setUniform1f(\"u_fadeDuration\",i/1e3),V&&A.setUniform4fv(\"u_id\",c);let L=-1;for(const i of o){if(!i.layerData.has(_))continue;if(i.key.level!==L&&(L=i.key.level,P.setDataUniforms(A,p,t,L,g)),T=i.layerData.get(_),0===T.iconPerPageElementsMap.size)continue;T.prepareForRendering(u),T.updateOpacityInfo();const a=T.iconVAO;if(null!=a){u.bindVAO(a),A.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.dvs),A.setUniform1f(\"u_time\",(performance.now()-T.lastOpacityUpdate)/1e3);for(const[t,a]of T.iconPerPageElementsMap)this._renderIconRange(e,A,a,t,i)}}}_renderIconRange(e,t,i,a,r){const{context:n,spriteMosaic:o}=e;this._spritesTextureSize[0]=o.getWidth(a)/4,this._spritesTextureSize[1]=o.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),o.bind(n,p.LINEAR,a,s),this._setStencilState(e,r),n.drawElements(m.TRIANGLES,i[1],d.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),r.triangleCount+=i[1]/3}_drawText(e,s,c,u){const{context:p,displayLevel:m,drawPhase:d,glyphMosaic:g,painter:_,pixelRatio:h,spriteMosaic:M,state:P,styleLayerUID:U,requestRender:T,allowDelayedRender:E}=e,S=s.textMaterial,v=_.vectorTilesMaterialManager;let x,D=!1;for(const t of c)if(t.layerData.has(U)&&(x=t.layerData.get(U),x.glyphPerPageElementsMap.size>0)){D=!0;break}if(!D)return;const I=s.getPaintProperty(\"text-opacity\");if(I&&!I.isDataDriven&&0===I.getValue(m))return;const R=s.getPaintProperty(\"text-color\"),V=!R||R.isDataDriven||R.getValue(m)[3]>0,w=s.getPaintProperty(\"text-halo-width\"),A=s.getPaintProperty(\"text-halo-color\"),L=(!w||w.isDataDriven||w.getValue(m)>0)&&(!A||A.isDataDriven||A.getValue(m)[3]>0);if(!V&&!L)return;const O=24/8;let N=s.getLayoutValue(\"text-rotation-alignment\",m);N===a.AUTO&&(N=s.getLayoutValue(\"symbol-placement\",m)===r.POINT?a.VIEWPORT:a.MAP);const z=N===a.MAP,k=s.getLayoutValue(\"text-keep-upright\",m)&&z,b=d===l.HITTEST,G=.8*O/h;this._glyphTextureSize||(this._glyphTextureSize=t(g.width/4,g.height/4));const W=s.getPaintValue(\"text-translate\",m),j=s.getPaintValue(\"text-translate-anchor\",m),F=this._sdfProgramOptions;F.id=b;const B=v.getMaterialProgram(p,S,F);if(E&&null!=T&&!B.compiled)return void T();p.useProgram(B),B.setUniformMatrix3fv(\"u_displayViewMat3\",N===a.MAP?P.displayViewMat3:P.displayMat3),B.setUniformMatrix3fv(\"u_displayMat3\",j===n.VIEWPORT?P.displayMat3:P.displayViewMat3),B.setUniform2fv(\"u_textTranslation\",W),B.setUniform1f(\"u_depth\",s.z+y),B.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),B.setUniform1f(\"u_mapRotation\",f(P.rotation)),B.setUniform1f(\"u_keepUpright\",k?1:0),B.setUniform1f(\"u_level\",10*m),B.setUniform1i(\"u_texture\",o),B.setUniform1f(\"u_antialiasingWidth\",G),B.setUniform1f(\"u_fadeDuration\",i/1e3),b&&B.setUniform4fv(\"u_id\",u);let H=-1;for(const t of c){if(!t.layerData.has(U))continue;if(t.key.level!==H&&(H=t.key.level,S.setDataUniforms(B,m,s,H,M)),x=t.layerData.get(U),0===x.glyphPerPageElementsMap.size)continue;x.prepareForRendering(p),x.updateOpacityInfo();const i=x.textVAO;if(null==i)continue;p.bindVAO(i),B.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),this._setStencilState(e,t);const a=(performance.now()-x.lastOpacityUpdate)/1e3;B.setUniform1f(\"u_time\",a),x.glyphPerPageElementsMap.forEach(((e,i)=>{this._renderGlyphRange(p,e,i,g,B,L,V,t)}))}}_renderGlyphRange(e,t,i,a,r,n,s,l){a.bind(e,p.LINEAR,i,o),n&&(r.setUniform1f(\"u_halo\",1),e.drawElements(m.TRIANGLES,t[1],d.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),s&&(r.setUniform1f(\"u_halo\",0),e.drawElements(m.TRIANGLES,t[1],d.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}_setStencilState(e,t){const{context:i,is3D:a,stencilSymbols:r}=e;if(i.setStencilTestEnabled(!0),r)return i.setStencilWriteMask(255),void i.setStencilFunction(g.ALWAYS,t.stencilRef,255);i.setStencilWriteMask(0),a?i.setStencilFunction(g.EQUAL,t.stencilRef,255):i.setStencilFunction(g.GREATER,255,255)}}export{_ as WGLBrushVTLSymbol};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{LabelMaterialKey as o}from\"../materialKey/MaterialKey.js\";import{CompareFunction as n,PrimitiveType as r,DataType as s}from\"../../../../webgl/enums.js\";const i=e=>t(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:s.SHORT},{location:1,name:\"a_id\",count:4,type:s.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:s.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:s.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texAndSize\",count:4,type:s.UNSIGNED_BYTE},{location:5,name:\"a_refSymbolAndPlacementOffset\",count:4,type:s.UNSIGNED_BYTE},{location:6,name:\"a_glyphData\",count:4,type:s.UNSIGNED_BYTE},{location:7,name:\"a_vertexOffset\",count:2,type:s.SHORT},{location:8,name:\"a_texCoords\",count:2,type:s.UNSIGNED_SHORT}]});class l extends a{dispose(){}getGeometryType(){return e.LABEL}supportsSymbology(e){return!0}drawGeometry(e,t,a,l){const{context:m,painter:u,state:d,rendererInfo:f,requestRender:c,allowDelayedRender:_}=e,p=o.load(a.materialKey),E=p.mapAligned?1:0;if(!E&&Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:y,attributes:N}=i(p),U=u.materialManager.getMaterialProgram(e,p,\"materials/label\",N,l);if(_&&null!=c&&!U.compiled)return void c();e.context.setStencilFunction(n.EQUAL,0,255),m.useProgram(U),this._setSharedUniforms(U,e,t),u.textureManager.bindTextures(m,U,p);const S=1===E?d.displayViewMat3:d.displayMat3;this._setSizeVVUniforms(p,U,f,t),U.setUniform1f(\"u_mapRotation\",Math.floor(d.rotation/360*254)),U.setUniform1f(\"u_mapAligned\",E),U.setUniformMatrix3fv(\"u_displayMat3\",S),U.setUniform1f(\"u_opacity\",1),U.setUniform2fv(\"u_screenSize\",e.state.size);const T=a.target.getVAO(m,y,N),g=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m.bindVAO(T),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",1),m.drawElements(r.TRIANGLES,a.indexCount,s.UNSIGNED_INT,g),U.setUniform1f(\"u_isHaloPass\",1),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(r.TRIANGLES,a.indexCount,s.UNSIGNED_INT,g),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(r.TRIANGLES,a.indexCount,s.UNSIGNED_INT,g),m.setStencilTestEnabled(!0),m.setBlendingEnabled(!0)}}export{l as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import o from\"./WGLGeometryBrush.js\";import{LineMaterialKey as a}from\"../materialKey/MaterialKey.js\";import{PrimitiveType as n,DataType as r}from\"../../../../webgl/enums.js\";const i=e=>t(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_offsetAndNormal\",count:4,type:r.BYTE},{location:4,name:\"a_accumulatedDistanceAndHalfWidth\",count:2,type:r.UNSIGNED_SHORT},{location:5,name:\"a_tlbr\",count:4,type:r.UNSIGNED_SHORT},{location:6,name:\"a_segmentDirection\",count:4,type:r.BYTE},{location:7,name:\"a_aux\",count:2,type:r.UNSIGNED_SHORT},{location:8,name:\"a_zoomRange\",count:2,type:r.UNSIGNED_SHORT}]});class s extends o{dispose(){}getGeometryType(){return e.LINE}supportsSymbology(e){return!0}drawGeometry(e,t,o,s){const{context:l,painter:m,rendererInfo:c,displayLevel:u,passOptions:d,requestRender:p,allowDelayedRender:y}=e,_=a.load(o.materialKey),f=null!=d&&\"hittest\"===d.type;let E=i(_),N=n.TRIANGLES;f&&(E=this._getTriangleDesc(o.materialKey,E),N=n.POINTS);const{attributes:g,bufferLayouts:S}=E,T=m.materialManager.getMaterialProgram(e,_,\"materials/line\",g,s);if(y&&null!=p&&!T.compiled)return void p();const U=1/e.pixelRatio,G=0;l.useProgram(T),this._setSharedUniforms(T,e,t),_.textureBinding&&m.textureManager.bindTextures(l,T,_);const I=2**(u-t.key.level);T.setUniform1f(\"u_zoomFactor\",I),T.setUniform1f(\"u_blur\",G+U),T.setUniform1f(\"u_antialiasing\",U),this._setSizeVVUniforms(_,T,c,t),this._setColorAndOpacityVVUniforms(_,T,c),l.setFaceCullingEnabled(!1);const D=o.target.getVAO(l,S,g,f);let R=o.indexCount,x=o.indexFrom*Uint32Array.BYTES_PER_ELEMENT;f&&(R/=3,x/=3),l.bindVAO(D),l.drawElements(N,R,r.UNSIGNED_INT,x)}}export{s as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as t}from\"../enums.js\";import{createProgramDescriptor as e}from\"../Utils.js\";import o from\"./WGLGeometryBrush.js\";import{TextMaterialKey as a}from\"../materialKey/MaterialKey.js\";import{PrimitiveType as n,DataType as r}from\"../../../../webgl/enums.js\";const s=t=>e(t.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texFontSize\",count:4,type:r.UNSIGNED_BYTE},{location:5,name:\"a_aux\",count:4,type:r.BYTE},{location:6,name:\"a_zoomRange\",count:2,type:r.UNSIGNED_SHORT},{location:7,name:\"a_vertexOffset\",count:2,type:r.SHORT},{location:8,name:\"a_texCoords\",count:2,type:r.UNSIGNED_SHORT}]});class i extends o{dispose(){}getGeometryType(){return t.TEXT}supportsSymbology(t){return!0}drawGeometry(t,e,o,i){const{context:m,painter:l,rendererInfo:u,state:d,passOptions:f,requestRender:_,allowDelayedRender:p}=t,c=a.load(o.materialKey),y=null!=f&&\"hittest\"===f.type,{bufferLayouts:E,attributes:N}=s(c),U=l.materialManager.getMaterialProgram(t,c,\"materials/text\",N,i);if(p&&null!=_&&!U.compiled)return void _();m.useProgram(U);let S=n.TRIANGLES;y&&(S=n.POINTS),this._setSharedUniforms(U,t,e),l.textureManager.bindTextures(m,U,c),U.setUniformMatrix3fv(\"u_displayMat3\",d.displayMat3),U.setUniformMatrix3fv(\"u_displayViewMat3\",d.displayViewMat3),this._setSizeVVUniforms(c,U,u,e),this._setColorAndOpacityVVUniforms(c,U,u),this._setRotationVVUniforms(c,U,u);const T=o.target.getVAO(m,E,N),x=o.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m.bindVAO(T),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",1),m.drawElements(S,o.indexCount,r.UNSIGNED_INT,x),U.setUniform1f(\"u_isHaloPass\",1),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(n.TRIANGLES,o.indexCount,r.UNSIGNED_INT,x),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(S,o.indexCount,r.UNSIGNED_INT,x)}}export{i as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport r from\"./webgl/brushes/BrushBitmap.js\";import s from\"./webgl/brushes/BrushClip.js\";import e from\"./webgl/brushes/BrushOverlay.js\";import o from\"./webgl/brushes/WGLBrushDotDensity.js\";import m from\"./webgl/brushes/WGLBrushHeatmap.js\";import l from\"./webgl/brushes/WGLBrushInfo.js\";import t from\"./webgl/brushes/WGLBrushPieChart.js\";import b from\"./webgl/brushes/WGLBrushStencil.js\";import{WGLBrushVTLBackground as h}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as i}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as u}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as p}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as L}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";import f from\"./webgl/brushes/WGLGeometryBrushFill.js\";import B from\"./webgl/brushes/WGLGeometryBrushLabel.js\";import g from\"./webgl/brushes/WGLGeometryBrushLine.js\";import G from\"./webgl/brushes/WGLGeometryBrushMarker.js\";import j from\"./webgl/brushes/WGLGeometryBrushText.js\";const w={marker:G,line:g,fill:f,text:j,label:B,clip:s,stencil:b,bitmap:r,overlay:e,tileInfo:l,vtlBackground:h,vtlFill:u,vtlLine:p,vtlCircle:i,vtlSymbol:L,dotDensity:o,heatmap:m,pieChart:t};export{w as brushes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{disposeMaybe as e}from\"../../../../../core/maybe.js\";import t from\"../../../../../core/RandomLCG.js\";import{textureBindingRenderer0 as o,textureBindingRenderer1 as r,tileSize as s}from\"../definitions.js\";import{WGLGeometryType as i,WGLSymbologyType as n}from\"../enums.js\";import d from\"./WGLGeometryBrushFill.js\";import{assertRendererSchema as a}from\"../techniques/utils.js\";import{BufferObject as l}from\"../../../../webgl/BufferObject.js\";import{DataType as u,PrimitiveType as _,TextureSamplingMode as m,TextureWrapMode as c,RenderbufferFormat as f,Usage as h,PixelType as p}from\"../../../../webgl/enums.js\";import{FramebufferObject as T}from\"../../../../webgl/FramebufferObject.js\";import{Renderbuffer as x}from\"../../../../webgl/Renderbuffer.js\";import{RenderbufferDescriptor as w}from\"../../../../webgl/RenderbufferDescriptor.js\";import{Texture as D}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as y}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as b}from\"../../../../webgl/VertexArrayObject.js\";class g extends d{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([o,r]),this._dotVAO=null,this._dotDesc={vsPath:\"dot/dot\",fsPath:\"dot/dot\",attributes:new Map([[\"a_pos\",0]])}}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=e(this._dotFBO),this._dotVAO=e(this._dotVAO)}getGeometryType(){return i.FILL}supportsSymbology(e){return e===n.DOT_DENSITY}_drawFills(e,t,o,r,s,i){const{passOptions:n}=e;if(null!=n&&\"hittest\"===n.type)super._drawFills(e,t,o,r,s,i);else{const r=this._drawDotLocations(e,t,o,s,i);this._drawDotDensity(e,t,r)}}_drawDotDensity(e,t,o){const{context:r,painter:s,rendererInfo:i,requestRender:n,allowDelayedRender:d}=e,l=s.materialManager.getProgram(this._dotDesc);if(d&&null!=n&&!l.compiled)return void n();const{rendererSchema:m}=i;a(m,\"dot-density\");const c=this._createDotDensityMesh(r,this._dotDesc.attributes,{geometry:[{name:\"a_pos\",count:2,type:u.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});r.setStencilTestEnabled(!0),r.useProgram(l),l.setUniform1f(\"u_tileZoomFactor\",1),l.setUniform1i(\"u_texture\",this._dotSamplers[0]),l.setUniform1f(\"u_dotSize\",Math.max(m.dotSize,1)),l.setUniform1f(\"u_pixelRatio\",window.devicePixelRatio),this._setSharedUniforms(l,e,t),r.bindTexture(o,this._dotSamplers[0]),r.bindVAO(c),r.drawArrays(_.POINTS,0,262144)}_drawDotLocations(e,t,o,r,i){const{context:n,rendererInfo:d,requiredLevel:l}=e,m=n.getViewport(),{rendererSchema:c}=d;a(c,\"dot-density\");const{dotScale:f,colors:h,activeDots:p,backgroundColor:T,dotValue:x}=c;n.setViewport(0,0,512,512);const w=n.getBoundFramebufferObject(),D=this._createFBO(n);n.bindFramebuffer(D),n.setClearColor(0,0,0,0),n.clear(n.gl.COLOR_BUFFER_BIT|n.gl.STENCIL_BUFFER_BIT),n.setStencilTestEnabled(!1);const y=1/2**(l-t.key.level),b=s,g=b*window.devicePixelRatio*b*window.devicePixelRatio,O=1/y*(1/y),S=f?e.state.scale/f:1;return o.setUniform1f(\"u_tileZoomFactor\",y),o.setUniform1f(\"u_tileDotsOverArea\",g/(s*window.devicePixelRatio*s*window.devicePixelRatio)),o.setUniformMatrix4fv(\"u_dotColors\",h),o.setUniform4fv(\"u_isActive\",p),o.setUniform4fv(\"u_dotBackgroundColor\",T),o.setUniform1f(\"u_dotValue\",Math.max(1,x*S*O)),this._bindDotDensityTextures(n,o,d,b),n.drawElements(_.TRIANGLES,r,u.UNSIGNED_INT,i),n.setViewport(m.x,m.y,m.width,m.height),n.bindFramebuffer(w),D.colorTexture}_createFBO(e){if(null==this._dotFBO){const t=512,o=512,r=new y(t,o);r.samplingMode=m.NEAREST,r.wrapMode=c.CLAMP_TO_EDGE;const s=new x(e,new w(f.DEPTH_STENCIL,t,o));this._dotFBO=new T(e,r,s)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,o,r){const{rendererSchema:s}=o;a(s,\"dot-density\");const i=this._createDotDensityTextures(e,r,s.seed);t.setUniform1iv(\"u_dotTextures\",this._dotSamplers);for(let n=0;n<i.length;n++)e.bindTexture(i[n],this._dotSamplers[n])}_createDotDensityMesh(e,t,o){if(null==this._dotVAO){const r=2,s=new Int16Array(262144*r);for(let e=0;e<512;e++)for(let t=0;t<512;t++)s[r*(t+512*e)]=t,s[r*(t+512*e)+1]=e;const i=l.createVertex(e,h.STATIC_DRAW,s);this._dotVAO=new b(e,t,o,{geometry:i},null)}return this._dotVAO}_createDotDensityTextures(e,o,r){if(this._dotTextureSize===o&&this._seed===r||(this._disposeTextures(),this._dotTextureSize=o,this._seed=r),null===this._dotTextures){const s=new t(r);this._dotTextures=[this._allocDotDensityTexture(e,o,s),this._allocDotDensityTexture(e,o,s)]}return this._dotTextures}_allocDotDensityTexture(e,t,o){const r=new Float32Array(t*t*4);for(let i=0;i<r.length;i++)r[i]=o.getFloat();const s=new y;return s.dataType=p.FLOAT,s.samplingMode=m.NEAREST,s.width=t,s.height=t,new D(e,s,r)}}export{g as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nconst o=!0,t=32,c=1.5,e=200;export{t as collisionGridCellSize,c as declutterBudget,o as declutterTiles,e as fadeDuration};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{DataType as e}from\"../../../webgl/enums.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";const r={geometry:[new o(\"a_pos\",2,e.BYTE,0,2)]},t={geometry:[new o(\"a_pos\",2,e.BYTE,0,4),new o(\"a_tex\",2,e.BYTE,2,4)]},m={geometry:[new o(\"a_pos\",2,e.UNSIGNED_SHORT,0,4)]};export{r as Pos2b,m as Pos2us,t as PosTex2b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{CapType as n,JoinType as r}from\"../../../../symbols/cim/enums.js\";import{WGLGeometryType as s,WGLSymbologyType as a,VVType as i}from\"./enums.js\";import{Usage as c,DataType as o,PixelType as u}from\"../../../webgl/enums.js\";import{VertexElementDescriptor as l}from\"../../../webgl/VertexElementDescriptor.js\";const f=t.getLogger(\"esri.views.2d.engine.webgl.Utils\"),m=\"geometry\",d=[{name:m,strideInBytes:12}],p=[{name:m,strideInBytes:36}],y=[{name:m,strideInBytes:24}],I=[{name:m,strideInBytes:12}],S=[{name:m,strideInBytes:40}],T=[{name:m,strideInBytes:36}],g=[{name:m,strideInBytes:36}];function w(e){const t={};for(const n of e)t[n.name]=n.strideInBytes;return t}const E=w([{name:m,strideInBytes:36}]),h=w(d),L=w(p),N=w(y),D=w(I),A=w(S),M=w(T),U=w(g);function R(e,t){switch(e){case s.MARKER:return t===a.HEATMAP?h:E;case s.FILL:switch(t){case a.DOT_DENSITY:return D;case a.SIMPLE:case a.OUTLINE_FILL_SIMPLE:return N;default:return L}case s.LINE:return A;case s.TEXT:return M;case s.LABEL:return U}}const _=[m],B=[m],O=[m],v=[m],C=[m];function b(e){switch(e){case s.MARKER:return _;case s.FILL:return B;case s.LINE:return O;case s.TEXT:return v;case s.LABEL:return C}}function F(e){switch(e%4){case 0:case 2:return 4;case 1:case 3:return 1}}function P(e,t){switch(t%4){case 0:case 2:return new Uint32Array(Math.floor(e*t/4));case 1:case 3:return new Uint8Array(e*t)}}function x(e,t){switch(t%4){case 0:case 2:return new Uint32Array(e);case 1:case 3:return new Uint8Array(e)}}function z(e){return null!=e}function $(e){return\"number\"==typeof e}function k(t){switch(t){case\"butt\":return n.BUTT;case\"round\":return n.ROUND;case\"square\":return n.SQUARE;default:return f.error(new e(\"mapview-invalid-type\",`Cap type ${t} is not a valid option. Defaulting to round`)),n.ROUND}}function G(t){switch(t){case\"miter\":return r.MITER;case\"bevel\":return r.BEVEL;case\"round\":return r.ROUND;default:return f.error(new e(\"mapview-invalid-type\",`Join type ${t} is not a valid option. Defaulting to round`)),r.ROUND}}function V(e){switch(e){case\"opacity\":return i.OPACITY;case\"color\":return i.COLOR;case\"rotation\":return i.ROTATION;case\"size\":return i.SIZE;default:return f.error(`Cannot interpret unknown vv: ${e}`),null}}function j(e,t,n,r,s,a,i){for(const c in a){const t=a[c].stride,r=F(t),i=a[c].data,o=n[c].data;if(null==i||null==o)continue;const u=t*s.vertexCount/r,l=t*e/r,f=t*s.vertexFrom/r;for(let e=0;e<u;++e)o[e+l]=i[e+f]}if(null!=i&&null!=r){const n=s.indexCount;for(let a=0;a<n;++a)r[a+t]=i[a+s.indexFrom]-s.vertexFrom+e}}const Y={[m]:c.STATIC_DRAW};function H(e,t){const n=[];for(let r=0;r<5;++r){const s=b(r),a={};for(const e of s)a[e]={data:t(r,e)};n.push({data:e(r),buffers:a})}return n}function q(e){switch(e){case o.BYTE:case o.UNSIGNED_BYTE:return 1;case o.SHORT:case o.UNSIGNED_SHORT:return 2;case o.FLOAT:case o.INT:case o.UNSIGNED_INT:return 4}}function K(t){switch(t){case u.UNSIGNED_BYTE:return 1;case u.UNSIGNED_SHORT_4_4_4_4:return 2;case u.FLOAT:return 4;default:return void f.error(new e(\"webgl-utils\",`Unable to handle type ${t}`))}}function W(t){switch(t){case u.UNSIGNED_BYTE:return Uint8Array;case u.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case u.FLOAT:return Float32Array;default:return void f.error(new e(\"webgl-utils\",`Unable to handle type ${t}`))}}function X(e){const t={};for(const n in e){const r=e[n];let s=0;t[n]=r.map((e=>{const t=new l(e.name,e.count,e.type,s,0,e.normalized||!1);return s+=e.count*q(e.type),t})),t[n]?.forEach((e=>e.stride=s))}return t}const J=e=>{const t=new Map;for(const n in e)for(const r of e[n])t.set(r.name,r.location);return t},Q=e=>{const t={};for(const n in e){const r=e[n];t[n]=r?.length?r[0].stride:0}return t},Z=new Map,ee=(e,t)=>{if(!Z.has(e)){const n=X(t),r={strides:Q(n),bufferLayouts:n,attributes:J(t)};Z.set(e,r)}return Z.get(e)};function te(e){e(s.FILL),e(s.LINE),e(s.MARKER),e(s.TEXT),e(s.LABEL)}const ne=e=>\"path\"in e&&pe(e.path),re=e=>!(!(\"url\"in e)||!e.url)||!(!(\"imageData\"in e)||!e.imageData),se=e=>\"imageData\"in e&&e.imageData&&\"contentType\"in e&&e.contentType?`data:${e.contentType};base64,${e.imageData}`:\"url\"in e?e.url:null,ae=e=>null!=e&&e.startsWith(\"data:image/gif\"),ie=e=>\"url\"in e&&e.url&&(e.url.includes(\".gif\")||ae(e.url))||\"contentType\"in e&&\"image/gif\"===e.contentType||\"imageData\"in e&&ae(e.imageData),ce=e=>null!=e&&e.startsWith(\"data:image/png\"),oe=e=>\"url\"in e&&e.url&&(e.url.includes(\".png\")||ce(e.url))||\"contentType\"in e&&\"image/png\"===e.contentType||\"imageData\"in e&&ce(e.imageData),ue=e=>e.type&&e.type.toLowerCase().includes(\"3d\");function le(e){switch(e.type){case\"line\":{const t=e;return\"CIMSolidStroke\"===t.cim.type&&!t.dashTemplate}case\"fill\":return\"CIMSolidFill\"===e.cim.type;case\"esriSFS\":return\"esriSFSSolid\"===e.style||\"esriSFSNull\"===e.style;case\"esriSLS\":return\"esriSLSSolid\"===e.style||\"esriSLSNull\"===e.style;default:return!1}}function fe(e){switch(\"cim\"in e?e.cim.type:e.type){case\"esriSMS\":case\"esriPMS\":case\"CIMPointSymbol\":return!1;case\"CIMVectorMarker\":case\"CIMCharacterMarker\":case\"CIMPictureMarker\":return ye(e);default:return!0}}function me(e){const t=\"maxVVSize\"in e&&e.maxVVSize,n=\"width\"in e&&e.width||\"size\"in e&&e.size||0;return t||n}function de(e){const t=[];for(let n=0;n<e.length;n++)t.push(e.charCodeAt(n));return t}const pe=e=>!!e&&(e=e.trim(),!!(/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(e)&&/[\\dz]$/i.test(e)&&e.length>4)),ye=e=>\"fill\"===e.type&&\"CIMMarkerPlacementInsidePolygon\"===e?.cim?.markerPlacement?.type;export{P as allocateTypedArrayBuffer,x as allocateTypedArrayBufferwithData,Y as cVboInfo,de as charCodes,j as copyMeshData,H as createGeometryData,ee as createProgramDescriptor,te as forEachGeometryType,q as getBytes,k as getCapType,G as getJoinType,b as getNamedBuffers,me as getPMSResourceSize,W as getPixelArrayCtor,K as getPixelBytes,R as getStrides,se as getUrl,V as getVVType,ue as is3D,z as isDefined,ie as isGIF,ae as isGIFDataUri,re as isImageResource,ye as isMarkerPlacementInsidePolygon,$ as isNumber,oe as isPNG,ce as isPNGDataUri,ne as isSVGResource,le as isSimple,pe as isValidSVG,fe as shouldRepeat,F as strideToPackingFactor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{BufferObject as t}from\"../../../webgl/BufferObject.js\";import{Usage as e,DataType as r,PrimitiveType as s}from\"../../../webgl/enums.js\";import{VertexArrayObject as i}from\"../../../webgl/VertexArrayObject.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";class n{constructor(s,n){this._rctx=s,this._vertexBuffer=t.createVertex(s,e.STATIC_DRAW,new Uint16Array(n)),this._vao=new i(s,new Map([[\"a_position\",0]]),{geometry:[new o(\"a_position\",2,r.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(s.TRIANGLE_STRIP,0,this._count)}}export{n as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{e as r}from\"../../../../chunks/earcut.js\";import{s as n}from\"../../../../chunks/vec2.js\";import{a as s}from\"../../../../chunks/vec2f64.js\";import{convertFromNestedArray as o,convertFromPolygon as i}from\"../../../../layers/graphics/featureConversionUtils.js\";import c from\"../../../../layers/graphics/OptimizedGeometry.js\";import{i1616to32 as a}from\"./number.js\";import{BufferObject as f}from\"../../../webgl/BufferObject.js\";import{PrimitiveType as h,Usage as m,DataType as u}from\"../../../webgl/enums.js\";const y=t=>{switch(t.BYTES_PER_ELEMENT){case 1:return u.UNSIGNED_BYTE;case 2:return u.UNSIGNED_SHORT;case 4:return u.UNSIGNED_INT;default:throw new e(\"Cannot get DataType of array\")}},l=(e,t,r,n)=>{let s=0;for(let o=1;o<r;o++){const r=e[2*(t+o-1)],n=e[2*(t+o-1)+1];s+=(e[2*(t+o)]-r)*(e[2*(t+o)+1]+n)}return n?s>0:s<0},x=({coords:e,lengths:t},n)=>{const s=[];for(let o=0,i=0;o<t.length;i+=t[o],o+=1){const c=i,a=[];for(;o<t.length-1&&l(e,i+t[o],t[o+1],n);o+=1,i+=t[o])a.push(i+t[o]-c);const f=e.slice(2*c,2*(i+t[o])),h=r(f,a,2);for(const e of h)s.push(e+c)}return s};class g{constructor(e,t,r,n=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=r,this.isMapSpace=n}static fromRect({x:e,y:t,width:r,height:n}){const s=e,o=t,i=s+r,c=o+n;return g.fromScreenExtent({xmin:s,ymin:o,xmax:i,ymax:c})}static fromPath(e){const t=o(new c,e.path,!1,!1),r=t.coords,n=new Uint32Array(x(t,!0)),s=new Uint32Array(r.length/2);for(let o=0;o<s.length;o++)s[o]=a(Math.floor(r[2*o]),Math.floor(r[2*o+1]));return new g({geometry:s},n,h.TRIANGLES)}static fromGeometry(r,n){const s=n.geometry?.type;switch(s){case\"polygon\":return g.fromPolygon(r,n.geometry);case\"extent\":return g.fromMapExtent(r,n.geometry);default:return t.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new e(\"mapview-bad-type\",`Unable to create a mesh from type ${s}`,n)),g.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const r=i(new c,t,!1,!1),o=r.coords,f=new Uint32Array(x(r,!1)),m=new Uint32Array(o.length/2),u=s(),y=s();for(let s=0;s<m.length;s++)n(u,o[2*s],o[2*s+1]),e.toScreen(y,u),m[s]=a(Math.floor(y[0]),Math.floor(y[1]));return new g({geometry:m},f,h.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:r,ymax:n}){const s={geometry:new Uint32Array([a(e,r),a(t,r),a(e,n),a(e,n),a(t,r),a(t,n)])},o=new Uint32Array([0,1,2,3,4,5]);return new g(s,o,h.TRIANGLES)}static fromMapExtent(e,t){const[r,n]=e.toScreen([0,0],[t.xmin,t.ymin]),[s,o]=e.toScreen([0,0],[t.xmax,t.ymax]),i={geometry:new Uint32Array([a(r,n),a(s,n),a(r,o),a(r,o),a(s,n),a(s,o)])},c=new Uint32Array([0,1,2,3,4,5]);return new g(i,c,h.TRIANGLES)}destroy(){null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)null!=this._cache.vertexBuffers[e]&&this._cache.vertexBuffers[e].dispose()}get elementType(){return y(this.indices)}getIndexBuffer(e,t=m.STATIC_DRAW){return this._cache.indexBuffer||(this._cache.indexBuffer=f.createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=m.STATIC_DRAW){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce(((r,n)=>({...r,[n]:f.createVertex(e,t,this.vertices[n])})),{})),this._cache.vertexBuffers}}export{g as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport t from\"../../../../core/Error.js\";import e from\"../../../../core/Logger.js\";import{watch as r}from\"../../../../core/reactiveUtils.js\";import{c as s}from\"../../../../chunks/mat3f32.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import o from\"./Mesh2D.js\";import{VertexArrayObject as h}from\"../../../webgl/VertexArrayObject.js\";const a=t=>parseFloat(t)/100;class c extends i{constructor(t,e){super(),this._clip=e,this._cache={},this.stage=t,this._handle=r((()=>e.version),(()=>this._invalidate())),this.ready()}static fromClipArea(t,e){return new c(t,e)}_destroyGL(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null),null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(t,e,r,s){const[i,o]=e.size;if(\"geometry\"!==this._clip.type&&this._lastWidth===i&&this._lastHeight===o||(this._lastWidth=i,this._lastHeight=o,this._destroyGL()),null==this._cache.vao){const i=this._createMesh(e,this._clip),o=i.getIndexBuffer(t),a=i.getVertexBuffers(t);this._cache.mesh=i,this._cache.vao=new h(t,r,s,a,o)}return this._cache.vao}_createTransforms(){return{dvs:s()}}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(t,e){const[r,s]=t.size,i=\"string\"==typeof e.left?a(e.left)*r:e.left,o=\"string\"==typeof e.right?a(e.right)*r:e.right,h=\"string\"==typeof e.top?a(e.top)*s:e.top,c=\"string\"==typeof e.bottom?a(e.bottom)*s:e.bottom,n=i,l=h;return{x:n,y:l,width:Math.max(r-o-n,0),height:Math.max(s-c-l,0)}}_createMesh(r,s){switch(s.type){case\"rect\":return o.fromRect(this._createScreenRect(r,s));case\"path\":return o.fromPath(s);case\"geometry\":return o.fromGeometry(r,s);default:return e.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new t(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),o.fromRect({x:0,y:0,width:1,height:1})}}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{brushes as s}from\"../brushes.js\";import{Container as e}from\"../Container.js\";import r from\"./ClippingInfo.js\";import{WGLDrawPhase as i}from\"./enums.js\";class n extends e{set clips(s){super.clips=s,this._updateClippingInfo(s)}renderChildren(s){null==this._renderPasses&&(this._renderPasses=this.prepareRenderPasses(s.painter));for(const r of this._renderPasses)try{r.render(s)}catch(e){}}prepareRenderPasses(e){return[e.registerRenderPass({name:\"clip\",brushes:[s.clip],target:()=>this._clippingInfos,drawPhase:i.MAP|i.LABEL|i.LABEL_ALPHA|i.DEBUG|i.HIGHLIGHT})]}_updateClippingInfo(s){null!=this._clippingInfos&&(this._clippingInfos.forEach((s=>s.destroy())),this._clippingInfos=null),null!=s&&s.length&&(this._clippingInfos=s.items.map((s=>r.fromClipArea(this.stage,s)))),this.requestRender()}}export{n as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{textureBindingBitmap as e}from\"../definitions.js\";import t from\"../VertexStream.js\";import i from\"./WGLBrush.js\";import{TextureSamplingMode as s,BlendFactor as n,CompareFunction as r}from\"../../../../webgl/enums.js\";const a={nearest:{defines:[],samplingMode:s.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:s.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:s.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:s.LINEAR_MIPMAP_LINEAR,mips:!0}},o=(e,t,i)=>{if(\"dynamic\"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,r=s>1.05||s<.95;return i.rotation||r||n||t.isSourceScaled||t.rotation?a.bilinear:a.nearest}return a[i.samplingMode]};class d extends i{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0)}draw(i,s){const{context:a,renderingOptions:d,painter:l,requestRender:m,allowDelayedRender:c}=i;if(!s.source||!s.isReady)return;const p=o(i,s,d),u=l.materialManager.getProgram(this._desc,p.defines);if(c&&null!=m&&!u.compiled)return void m();i.timeline.begin(this.name),\"additive\"===s.blendFunction?a.setBlendFunctionSeparate(n.ONE,n.ONE,n.ONE,n.ONE):a.setBlendFunctionSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA),a.setStencilFunction(r.EQUAL,s.stencilRef,255),this._quad||(this._quad=new t(a,[0,0,1,0,0,1,1,1]));const{coordScale:f,computedOpacity:_,transforms:E}=s;s.setSamplingProfile(p),s.bind(i.context,e),a.useProgram(u),u.setUniformMatrix3fv(\"u_dvsMat3\",E.dvs),u.setUniform1i(\"u_texture\",e),u.setUniform2fv(\"u_coordScale\",f),u.setUniform1f(\"u_opacity\",_),this._quad.draw(),i.timeline.end(this.name)}}export{d as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name||\"UnnamedBrush\",this.brushEffect=null}prepareState(t,r){}draw(t,r,s){}drawMany(t,r,s){for(const a of r)a.visible&&this.draw(t,a,s)}}export{t as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Error.js\";import{PixelType as t,TextureSamplingMode as r,PixelFormat as a,SizedPixelFormat as o}from\"./enums.js\";class l{constructor(e,t,r,a){this.dataType=e,this.samplingMode=t,this.pixelFormat=r,this.internalFormat=a}}function n(n,i){const{textureFloat:f,colorBufferFloat:s}=n.capabilities,u=f?.textureFloat,_=f?.textureFloatLinear,m=f?.textureHalfFloat,h=f?.textureHalfFloatLinear,p=s?.textureFloat,d=s?.textureHalfFloat,c=s?.floatBlend,x=n.driverTest.floatBufferBlend.result;if(!u&&!m)throw new e(\"heatmap:missing-texture-float\",\"HeatmapRenderer requires WebGL2 or the WebGL1 extension OES_texture_float or OES_texture_half_float.\");if(!p&&!d)throw new e(\"heatmap:missing-color-buffer-float\",\"HeatmapRenderer requires the WebGL extension EXT_color_buffer_float or EXT_color_buffer_half_float or WEBGL_color_buffer_float.\");if(!(c&&x||d))throw new e(\"heatmap:missing-float-blend\",\"HeatmapRenderer requires the WebGL extension EXT_float_blend or EXT_color_buffer_half_float.\"+(x?\"\":\" This device claims support for EXT_float_blend, but does not actually support it.\"));const b=u&&p&&c&&x,E=m&&d,R=_,F=h,L=!!s?.R32F,w=!!s?.R16F;if(b&&(R||!F))return R||i.warnOnce(\"Missing WebGL extension OES_texture_float_linear. Heatmap quality may be reduced.\"),new l(t.FLOAT,R?r.LINEAR:r.NEAREST,L?a.RED:a.RGBA,L?o.R32F:a.RGBA);if(E)return F||i.warnOnce(\"Missing WebGL extension OES_texture_half_float_linear. Heatmap quality may be reduced.\"),new l(t.HALF_FLOAT,F?r.LINEAR:r.NEAREST,w?a.RED:a.RGBA,w?o.R16F:a.RGBA);throw new e(\"heatmap:missing-hardware-support\",\"HeatmapRenderer requires WebGL extensions that allow it to render and blend to float or half float textures.\")}export{l as HeatmapTextureConfiguration,n as loadHeatmapTextureConfiguration};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Logger.js\";import{disposeMaybe as t}from\"../../../../../core/maybe.js\";import{WGLSymbologyType as r}from\"../enums.js\";import i from\"../VertexStream.js\";import s from\"./WGLGeometryBrushMarker.js\";import{Effect as a}from\"../effects/Effect.js\";import{assertRendererSchema as u}from\"../techniques/utils.js\";import{ContextType as n}from\"../../../../webgl/contextUtils.js\";import{CompareFunction as o,DataType as l,BlendFactor as f,ClearBufferBit as c,TextureWrapMode as h,RenderbufferFormat as m,TextureSamplingMode as p,PixelType as d}from\"../../../../webgl/enums.js\";import{FramebufferObject as _}from\"../../../../webgl/FramebufferObject.js\";import{loadHeatmapTextureConfiguration as b}from\"../../../../webgl/heatmapTextureUtils.js\";import{Renderbuffer as w}from\"../../../../webgl/Renderbuffer.js\";import{RenderbufferDescriptor as F}from\"../../../../webgl/RenderbufferDescriptor.js\";import{Texture as g}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as S}from\"../../../../webgl/TextureDescriptor.js\";const T=e.getLogger(\"esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap\");function v(e){return\"heatmap\"===e.type}function B(e,t){const{referenceScale:r,radius:i}=e;return i*(0!==r?r/t.scale:1)}class E extends s{constructor(){super(...arguments),this.brushEffect=new G}supportsSymbology(e){return e===r.HEATMAP}dispose(){super.dispose(),this.brushEffect.dispose(),this.brushEffect=null}prepareState(){}drawGeometry(e,t,r,i){const{defines:s}=this.brushEffect.loadQualityProfile(e.context);super.drawGeometry(e,t,r,i?[...i,...s]:s)}_drawMarkers(e,t,r,i,s,a,n){const{context:f,rendererInfo:c,state:h}=e,{rendererSchema:m}=c;u(m,\"heatmap\");const{isFieldActive:p}=m;r.setUniform1f(\"u_radius\",B(m,h)),n||(r.setUniform1f(\"u_isFieldActive\",p),f.setStencilFunction(o.GEQUAL,t.stencilRef,255)),f.drawElements(i,s,l.UNSIGNED_INT,a)}}const O={vsPath:\"heatmap/heatmapResolve\",fsPath:\"heatmap/heatmapResolve\",attributes:new Map([[\"a_position\",0]])},x=.25,y=1/(2*x);function P(e){return e<y?1:x}class G extends a{constructor(){super(...arguments),this.name=this.constructor.name}createOptions({passOptions:e}){return e}dispose(){this._prevFBO=null,null!=this._accumulateFramebuffer&&this._accumulateFramebuffer.detachDepthStencilBuffer(),this._accumulateOutputStencilBuffer=t(this._accumulateOutputStencilBuffer),this._accumulateFramebuffer=t(this._accumulateFramebuffer),this._resolveGradientTexture=t(this._resolveGradientTexture),this._tileQuad=t(this._tileQuad)}bind(e){const{context:t,rendererInfo:r,passOptions:i,state:s}=e,{rendererSchema:a}=r;!(null!=i&&\"hittest\"===i.type)&&v(a)&&(this._prevFBO=t.getBoundFramebufferObject(),this._prevViewport=t.getViewport(),u(a,\"heatmap\"),this._loadResources(e),this._updateResources(t,a,s),t.bindFramebuffer(this._accumulateFramebuffer),t.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0),t.setBlendFunction(f.ONE,f.ONE),t.setClearColor(0,0,0,0),t.clear(c.COLOR_BUFFER_BIT))}unbind(){this._prevFBO=null,this._prevViewport=null}draw(e){const{context:t,painter:r,rendererInfo:i,passOptions:s}=e,{rendererSchema:a}=i;if(null!=s&&\"hittest\"===s.type||!v(a))return;const{defines:u}=this.loadQualityProfile(t),n=r.materialManager.getProgram(O,u);t.useProgram(n),t.bindFramebuffer(this._prevFBO),t.setViewport(0,0,this._prevViewport.width,this._prevViewport.height),t.setBlendFunction(f.ONE,f.ONE_MINUS_SRC_ALPHA),t.setStencilTestEnabled(!1);const{radius:o,minDensity:l,densityRange:c}=a;t.bindTexture(this._accumulateFramebuffer.colorTexture,8),t.bindTexture(this._resolveGradientTexture,9),n.setUniform1i(\"u_texture\",8),n.setUniform1i(\"u_gradient\",9),n.setUniform2f(\"u_densityMinAndInvRange\",l,1/c),n.setUniform1f(\"u_densityNormalization\",3/(o*o*Math.PI)),this._tileQuad.draw()}_loadResources({context:e,painter:t}){const{dataType:r,samplingMode:s,pixelFormat:a,internalFormat:u,requiresSharedStencilBuffer:n}=this.loadQualityProfile(e),{width:o,height:l}=this._prevViewport,f=n?1:x,c=o*f,p=l*f;let d=new S(c,p);d.pixelFormat=a,d.internalFormat=u,d.dataType=r,d.samplingMode=s,d.wrapMode=h.CLAMP_TO_EDGE,n||(this._accumulateOutputStencilBuffer??=new w(e,new F(m.DEPTH_STENCIL,c,p))),this._accumulateFramebuffer??=new _(e,d,n?t.getSharedStencilBuffer():this._accumulateOutputStencilBuffer),d=new S,d.wrapMode=h.CLAMP_TO_EDGE,this._resolveGradientTexture??=new g(e,d),this._tileQuad??=new i(e,[0,0,1,0,0,1,1,1])}_updateResources(e,t,r){const{gradientHash:i,gradient:s}=t;this._prevGradientHash!==i&&(this._resolveGradientTexture.resize(s.length/4,1),this._resolveGradientTexture.setData(s),this._prevGradientHash=i);const{requiresSharedStencilBuffer:a}=this.loadQualityProfile(e),u=a?1:P(B(t,r)),{width:n,height:o}=this._prevViewport,l=n*u,f=o*u,{width:h,height:m}=this._accumulateFramebuffer;if(h!==l||m!==f){const e=this._accumulateFramebuffer.depthStencil;if(a&&null!=e){const{width:t,height:r}=e.descriptor;t===l&&r===f||(T.errorOnce(\"Attempted to resize shared stencil buffer! Detaching instead.\"),this._accumulateFramebuffer.detachDepthStencilBuffer())}this._accumulateFramebuffer.resize(l,f)}a||e.blitFramebuffer(this._prevFBO,this._accumulateFramebuffer,0,0,this._prevFBO.width,this._prevFBO.height,0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height,c.STENCIL_BUFFER_BIT,p.NEAREST)}loadQualityProfile(e){if(null==this._qualityProfile){const t=b(e,T),r=e.type===n.WEBGL1;this._qualityProfile={...t,requiresSharedStencilBuffer:r,defines:t.dataType!==d.FLOAT?[\"heatmapPrecisionHalfFloat\"]:[]}}return this._qualityProfile}}export{E as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{f as t}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as e}from\"../DefaultVertexAttributeLayouts.js\";import r from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as s}from\"../shaders/TileInfoPrograms.js\";import{BufferObject as o}from\"../../../../webgl/BufferObject.js\";import{BlendFactor as n,PrimitiveType as a,Usage as l,TextureWrapMode as u,TextureSamplingMode as m}from\"../../../../webgl/enums.js\";import{createProgram as f}from\"../../../../webgl/ProgramTemplate.js\";import{Texture as _}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as c}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as g}from\"../../../../webgl/VertexArrayObject.js\";import d from\"../../../../webgl/capabilities/isWebGL2Context.js\";const h=300,b=32;class p extends r{constructor(){super(...arguments),this._color=t(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(t,e){const{context:r,requestRender:i,allowDelayedRender:s}=t;if(!e.isReady)return;if(this._loadWGLResources(r),s&&null!=i&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void i();r.bindVAO(this._outlineVertexArrayObject),r.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._outlineProgram.setUniform2f(\"u_coord_range\",e.rangeX,e.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),r.drawArrays(a.LINE_STRIP,0,4);const o=this._getTexture(r,e);o?(r.bindVAO(this._tileInfoVertexArrayObject),r.useProgram(this._tileInfoProgram),r.bindTexture(o,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",e.rangeX/e.width,e.rangeY/e.height),this._tileInfoProgram.setUniform2f(\"u_delta\",8,8),this._tileInfoProgram.setUniform2f(\"u_dimensions\",o.descriptor.width,o.descriptor.height),r.drawArrays(a.TRIANGLE_STRIP,0,4),r.bindVAO()):r.bindVAO()}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const r=f(t,i),n=f(t,s),a=new Int8Array([0,0,1,0,1,1,0,1]),u=o.createVertex(t,l.STATIC_DRAW,a),m=new g(t,i.attributes,e,{geometry:u}),_=new Int8Array([0,0,1,0,0,1,1,1]),c=o.createVertex(t,l.STATIC_DRAW,_),d=new g(t,s.attributes,e,{geometry:c});this._outlineProgram=r,this._tileInfoProgram=n,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=d}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement(\"canvas\"),this._canvas.setAttribute(\"id\",\"tileCanvas2d\"),this._canvas.setAttribute(\"width\",`${h}`),this._canvas.setAttribute(\"height\",`${b}`),this._canvas.setAttribute(\"style\",\"display:none\"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const s=this._canvas,o=s.getContext(\"2d\");o.font=\"24px sans-serif\",o.textAlign=\"left\",o.textBaseline=\"top\",o.clearRect(0,0,h,b),r>1e5?(o.fillStyle=\"red\",o.fillRect(0,0,h,b),o.fillStyle=\"black\"):(o.clearRect(0,0,h,b),o.fillStyle=\"blue\"),o.fillText(i,0,0);const n=new c;return n.wrapMode=u.CLAMP_TO_EDGE,n.samplingMode=m.NEAREST,n.isImmutable=d(t.gl),e.texture=new _(t,n,s),e.texture}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as r}from\"../DefaultVertexAttributeLayouts.js\";import t from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{BufferObject as i}from\"../../../../webgl/BufferObject.js\";import{StencilOperation as o,Face as a,CompareFunction as l,PrimitiveType as n,Usage as d}from\"../../../../webgl/enums.js\";import{createProgram as m}from\"../../../../webgl/ProgramTemplate.js\";import{VertexArrayObject as _}from\"../../../../webgl/VertexArrayObject.js\";class c extends t{constructor(){super(...arguments),this._color=e(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e}){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),e.setStencilWriteMask(255)}draw(e,r){const{context:t,requestRender:s,allowDelayedRender:i}=e;this._initialized||this._initialize(t),!i||null==s||this._solidProgram.compiled?(t.setStencilFunctionSeparate(a.FRONT_AND_BACK,l.GREATER,r.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._solidProgram.setUniform2fv(\"u_coord_range\",[r.rangeX,r.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(n.TRIANGLE_STRIP,0,4),t.bindVAO()):s()}_initialize(e){if(this._initialized)return!0;const t=m(e,s);if(!t)return!1;const o=new Int8Array([0,0,1,0,0,1,1,1]),a=i.createVertex(e,d.STATIC_DRAW,o),l=new _(e,s.attributes,r,{geometry:a});return this._solidProgram=t,this._solidVertexArrayObject=l,this._initialized=!0,!0}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{minMaxZoomPrecisionFactor as t,textureBindingAttributeData0 as e,textureBindingAttributeData1 as i,textureBindingAttributeData2 as s,textureBindingAttributeData3 as o,textureBindingAttributeData4 as a,textureBindingAttributeData5 as r}from\"../definitions.js\";import n from\"./WGLBrush.js\";import{MaterialKeyBase as u}from\"../materialKey/MaterialKey.js\";import{BlendFactor as l,CompareFunction as m}from\"../../../../webgl/enums.js\";class v extends n{constructor(){super(...arguments),this._computeDesc=new Map}prepareState({context:t},e){e&&e.includes(\"hittest\")?t.setBlendFunctionSeparate(l.ONE,l.ONE,l.ONE,l.ONE):t.setBlendFunctionSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA),t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0)}draw(t,e,i){const s=this.getGeometryType();e.commit(t);const o=e.getGeometry(s);null!=o&&(t.timeline.begin(this.name),t.attributeView.bindTextures(t.context),t.context.setStencilFunction(m.EQUAL,e.stencilRef,255),o.forEachCommand((s=>{const o=u.load(s.materialKey).symbologyType;this.supportsSymbology(o)&&this.drawGeometry(t,e,s,i)})))}_setSharedUniforms(n,u,l){const{displayLevel:m,pixelRatio:v,state:f,passOptions:p}=u;null!=p&&\"hittest\"===p.type&&(n.setUniform2fv(\"u_hittestPos\",p.position),n.setUniform1f(\"u_hittestDist\",p.distance)),n.setUniform1f(\"u_pixelRatio\",v),n.setUniformMatrix3fv(\"u_tileMat3\",l.transforms.tileMat3),n.setUniformMatrix3fv(\"u_viewMat3\",f.viewMat3),n.setUniformMatrix3fv(\"u_dvsMat3\",l.transforms.dvs),n.setUniformMatrix3fv(\"u_displayViewMat3\",f.displayViewMat3),n.setUniform1f(\"u_currentZoom\",Math.floor(m*t)),n.setUniform1i(\"u_attributeTextureSize\",u.attributeView.size),n.setUniform1i(\"u_attributeData0\",e),n.setUniform1i(\"u_attributeData1\",i),n.setUniform1i(\"u_attributeData2\",s),n.setUniform1i(\"u_attributeData3\",o),n.setUniform1i(\"u_attributeData4\",a),n.setUniform1i(\"u_attributeData5\",r)}_setSizeVVUniforms(t,e,i,s){if(t.vvSizeMinMaxValue&&e.setUniform4fv(\"u_vvSizeMinMaxValue\",i.vvSizeMinMaxValue),t.vvSizeScaleStops&&e.setUniform1f(\"u_vvSizeScaleStopsValue\",i.vvSizeScaleStopsValue),t.vvSizeFieldStops){const t=i.getSizeVVFieldStops(s.key.level);null!=t&&(e.setUniform1fv(\"u_vvSizeFieldStopsValues\",t.values),e.setUniform1fv(\"u_vvSizeFieldStopsSizes\",t.sizes))}t.vvSizeUnitValue&&e.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",i.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(t,e,i){t.vvColor&&(e.setUniform1fv(\"u_vvColorValues\",i.vvColorValues),e.setUniform4fv(\"u_vvColors\",i.vvColors)),t.vvOpacity&&(e.setUniform1fv(\"u_vvOpacityValues\",i.vvOpacityValues),e.setUniform1fv(\"u_vvOpacities\",i.vvOpacities))}_setRotationVVUniforms(t,e,i){t.vvRotation&&e.setUniform1f(\"u_vvRotationType\",\"geographic\"===i.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(t,e,i=[\"a_pos\"]){const s=e.bufferLayouts.geometry,o=i.map((t=>s.findIndex((e=>e.name===t)))),a=`${t}-${o.join(\"-\")}`;let r=this._computeDesc.get(a);if(!r){const t=e.strides,i=e.strides.geometry,n=new Map(e.attributes),u=s.map((t=>({...t}))),l=Math.max(...e.attributes.values()),m={geometry:u};let v=0;for(const e of o){const t=s[e];m.geometry.push({count:t.count,name:t.name+\"1\",divisor:t.divisor,normalized:t.normalized,offset:i+t.offset,stride:i,type:t.type}),m.geometry.push({count:t.count,name:t.name+\"2\",divisor:t.divisor,normalized:t.normalized,offset:2*i+t.offset,stride:i,type:t.type}),n.set(t.name+\"1\",l+ ++v),n.set(t.name+\"2\",l+ ++v)}r={bufferLayouts:m,attributes:n,strides:t},this._computeDesc.set(a,r)}return r}}export{v as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as t,WGLSymbologyType as e}from\"../enums.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{MarkerMaterialKey as r}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as n}from\"../techniques/utils.js\";import{DataType as i,PrimitiveType as s}from\"../../../../webgl/enums.js\";const l={shader:\"materials/icon\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:i.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:i.SHORT},{location:2,name:\"a_texCoords\",count:2,type:i.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:i.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:i.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:i.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:i.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:i.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:i.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};class m extends a{dispose(){}getGeometryType(){return t.MARKER}supportsSymbology(t){return t!==e.HEATMAP&&t!==e.PIE_CHART}drawGeometry(t,e,a,i){const{context:m,painter:u,rendererInfo:d,state:c,passOptions:p,requestRender:y,allowDelayedRender:_}=t,E=r.load(a.materialKey),f=n(E.data),S=null!=p&&\"hittest\"===p.type,{shader:N,vertexLayout:T,hittestAttributes:g}=f.programSpec??l;let x=s.TRIANGLES,R=o(E.data,T);S&&(R=this._getTriangleDesc(a.materialKey,R,g),x=s.POINTS);const{attributes:h,bufferLayouts:U}=R,A=u.materialManager.getMaterialProgram(t,E,N,h,i);if(_&&null!=y&&!A.compiled)return void y();m.useProgram(A),E.textureBinding&&u.textureManager.bindTextures(m,A,E,!0),this._setSharedUniforms(A,t,e);const O=E.vvRotation?c.displayViewMat3:c.displayMat3;A.setUniformMatrix3fv(\"u_displayMat3\",O),this._setSizeVVUniforms(E,A,d,e),this._setColorAndOpacityVVUniforms(E,A,d),this._setRotationVVUniforms(E,A,d);const G=a.target.getVAO(m,U,h,S);let I=a.indexCount,M=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;S&&(I/=3,M/=3),m.bindVAO(G),this._drawMarkers(t,e,A,x,I,M,S),m.bindVAO(null)}_drawMarkers(t,e,o,a,r,n,s){t.context.drawElements(a,r,i.UNSIGNED_INT,n)}}export{m as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{i8888to32 as n}from\"./number.js\";function r(n,r=0,t=!1){const o=n[r+3];return n[r]*=o,n[r+1]*=o,n[r+2]*=o,t||(n[r+3]*=255),n}function t(r){if(!r)return 0;const{r:t,g:o,b:u,a:i}=r;return n(t*i,o*i,u*i,255*i)}function o(r){if(!r)return 0;const[t,o,u,i]=r;return n(t*(i/255),o*(i/255),u*(i/255),i)}function u(n,r,t=0){if(null==r)return n[t]=0,n[t+1]=0,n[t+2]=0,void(n[t+3]=0);const{r:o,g:u,b:i,a:c}=r;n[t]=o*c/255,n[t+1]=u*c/255,n[t+2]=i*c/255,n[t+3]=c}export{r as premultiplyAlpha,t as premultiplyAlphaRGBA,o as premultiplyAlphaRGBAArray,u as writeColor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name}createOptions(t,r){return null}}export{t as Effect};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nvar E,T,I,L,A,_,S;!function(E){E[E.FILL=0]=\"FILL\",E[E.LINE=1]=\"LINE\",E[E.MARKER=2]=\"MARKER\",E[E.TEXT=3]=\"TEXT\",E[E.LABEL=4]=\"LABEL\"}(E||(E={})),function(E){E[E.NONE=0]=\"NONE\",E[E.MAP=1]=\"MAP\",E[E.LABEL=2]=\"LABEL\",E[E.LABEL_ALPHA=4]=\"LABEL_ALPHA\",E[E.HITTEST=8]=\"HITTEST\",E[E.HIGHLIGHT=16]=\"HIGHLIGHT\",E[E.CLIP=32]=\"CLIP\",E[E.DEBUG=64]=\"DEBUG\",E[E.NUM_DRAW_PHASES=9]=\"NUM_DRAW_PHASES\"}(T||(T={})),function(E){E[E.SIZE=0]=\"SIZE\",E[E.COLOR=1]=\"COLOR\",E[E.OPACITY=2]=\"OPACITY\",E[E.ROTATION=3]=\"ROTATION\"}(I||(I={})),function(E){E[E.NONE=0]=\"NONE\",E[E.OPACITY=1]=\"OPACITY\",E[E.COLOR=2]=\"COLOR\",E[E.ROTATION=4]=\"ROTATION\",E[E.SIZE_MINMAX_VALUE=8]=\"SIZE_MINMAX_VALUE\",E[E.SIZE_SCALE_STOPS=16]=\"SIZE_SCALE_STOPS\",E[E.SIZE_FIELD_STOPS=32]=\"SIZE_FIELD_STOPS\",E[E.SIZE_UNIT_VALUE=64]=\"SIZE_UNIT_VALUE\"}(L||(L={})),function(E){E[E.MINMAX_TARGETS_OUTLINE=128]=\"MINMAX_TARGETS_OUTLINE\",E[E.SCALE_TARGETS_OUTLINE=256]=\"SCALE_TARGETS_OUTLINE\",E[E.FIELD_TARGETS_OUTLINE=512]=\"FIELD_TARGETS_OUTLINE\",E[E.UNIT_TARGETS_OUTLINE=1024]=\"UNIT_TARGETS_OUTLINE\"}(A||(A={})),function(E){E[E.SPRITE=0]=\"SPRITE\",E[E.GLYPH=1]=\"GLYPH\"}(_||(_={})),function(E){E[E.DEFAULT=0]=\"DEFAULT\",E[E.SIMPLE=1]=\"SIMPLE\",E[E.DOT_DENSITY=2]=\"DOT_DENSITY\",E[E.OUTLINE_FILL=3]=\"OUTLINE_FILL\",E[E.OUTLINE_FILL_SIMPLE=4]=\"OUTLINE_FILL_SIMPLE\",E[E.HEATMAP=5]=\"HEATMAP\",E[E.PIE_CHART=6]=\"PIE_CHART\"}(S||(S={}));export{_ as MosaicType,I as VVType,T as WGLDrawPhase,E as WGLGeometryType,S as WGLSymbologyType,L as WGLVVFlag,A as WGLVVTarget};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nconst n=new Float32Array(1),r=new Uint32Array(n.buffer);function t(n,r,t){return Math.round(Math.max(Math.min(n,t),r))}function u(n){return t(n,-128,127)}function e(n){return t(n,-32768,32767)}function o(n){return t(n,-2147483648,2147483647)}function f(n){return t(n,0,255)}function i(n){return t(n,0,65535)}function c(n){return t(n,0,4294967295)}function a(t){return n[0]=t,r[0]}function h(t){return r[0]=t,n[0]}function M(n){return[255&n,(65280&n)>>>8,(16711680&n)>>>16,(4278190080&n)>>>24]}function m(n,r){return 15&n|(15&r)<<4}function w(n,r){return 65535&n|r<<16}function x(n,r,t,u){return 255&n|(255&r)<<8|(255&t)<<16|u<<24}function y(n,r,t){return 255&n|(255&r)<<8|t<<16}function A(n){return 0|n}export{e as i16,w as i1616to32,o as i32,u as i8,y as i8816to32,x as i8888to32,A as numTo32,h as toFloat32,a as toUint32,i as u16,c as u32,M as u32to4Xu8,m as u4u4to8,f as u8};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};export{e as background};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};export{r as tileInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color * u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos , 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = clamp(vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(clamp(vividLight(Cb.r, Cs.r), 0.0, 1.0),\\nclamp(vividLight(Cb.g, Cs.g), 0.0, 1.0),\\nclamp(vividLight(Cb.b, Cs.b), 0.0, 1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = clamp(vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},debug:{overlay:{\"overlay.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvoid main(void) {\\ngl_FragColor = v_color;\\n}\",\"overlay.vert\":\"attribute vec3 a_PositionAndFlags;\\nuniform mat3 u_dvsMat3;\\nuniform vec4 u_colors[4];\\nuniform float u_opacities[4];\\nvarying vec4 v_color;\\nvoid main(void) {\\nvec2 position = a_PositionAndFlags.xy;\\nfloat flags = a_PositionAndFlags.z;\\nint colorIndex = int(mod(flags, 4.0));\\nvec4 color;\\nfor (int i = 0; i < 4; i++) {\\ncolor = u_colors[i];\\nif (i == colorIndex) {\\nbreak;\\n}\\n}\\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\\nfloat opacity;\\nfor (int i = 0; i < 4; i++) {\\nopacity = u_opacities[i];\\nif (i == opacityIndex) {\\nbreak;\\n}\\n}\\nv_color = color * opacity;\\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\\n}\"}},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat isVisible = getFilterBit(flags, 0);\\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nvarying vec2 v_uv;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp sampler2D u_attributeData4;\\nuniform highp sampler2D u_attributeData5;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float size = float(u_attributeTextureSize);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\\n}\\nhighp vec4 getAttributeData0(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData3, coords);\\n}\\nhighp vec4 getAttributeData4(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData4, coords);\\n}\\nhighp vec4 getAttributeData5(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData5, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\nuniform vec2 u_maxIntNumOfCrossing;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\\na_width *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\\na_height *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 patternSize = vec2(a_width, a_height);\\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, patternSize);\\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\\n#ifdef VV_COLOR\\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\\n#else\\nv_sampleAlphaOnly = 0.0;\\n#endif\\n}\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float u_hittestDist;\\nuniform highp vec2 u_hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\n#ifdef HITTEST\\nlowp vec4 fillPixelColor = vec4(1.0);\\n#else\\nlowp vec4 fillPixelColor = v_color;\\n#endif\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_isBackground  = a_glyphData.w;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor = (isBackground + isText) * a_color;\\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.frag\":\"precision mediump float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\\nuniform lowp vec4 u_defaultColor;\\nuniform lowp vec4 u_othersColor;\\nuniform lowp vec4 u_outlineColor;\\nuniform float u_donutRatio;\\nuniform float u_sectorThreshold;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\n#if __VERSION__ == 300\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn u_colors[colorIndex];\\n#else\\nmediump int colorIndex;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == index) {\\ncolorIndex = int(filteredSectorToColorId[i].y);\\n}\\n}\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == colorIndex) {\\nreturn u_colors[i];\\n}\\n}\\nreturn u_colors[NUMBER_OF_FIELDS - 1];\\n#endif\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = u_outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\nuniform float u_outlineWidth;\\nuniform mediump float u_sectorThreshold;\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nint filter(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\nif (sectorAngle > u_sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\n#if __VERSION__ == 300\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\\nif (i == filteredInfo.colorId) {\\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n}\\n}\\n#endif\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[NUMBER_OF_FIELDS]) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/hittest/common.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec2  a_offset = a_vertexOffset / 16.0;\\nfloat outlineSize = u_outlineWidth;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(size.x, size.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData0 = getAttributeData3(a_id);\\nattributeData[0] = filterNaNValues(attributeData0.x);\\nattributeData[1] = filterNaNValues(attributeData0.y);\\nattributeData[2] = filterNaNValues(attributeData0.z);\\nattributeData[3] = filterNaNValues(attributeData0.w);\\n#if (NUMBER_OF_FIELDS > 4)\\nvec4 attributeData1 = getAttributeData4(a_id);\\nattributeData[4] = filterNaNValues(attributeData1.x);\\nattributeData[5] = filterNaNValues(attributeData1.y);\\nattributeData[6] = filterNaNValues(attributeData1.z);\\nattributeData[7] = filterNaNValues(attributeData1.w);\\n#endif\\n#if (NUMBER_OF_FIELDS > 8)\\nvec4 attributeData2 = getAttributeData5(a_id);\\nattributeData[8] = filterNaNValues(attributeData2.x);\\nattributeData[9] = filterNaNValues(attributeData2.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[NUMBER_OF_FIELDS];\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\n#if __VERSION__ == 300\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == numOfEntries) {\\nbreak;\\n}\\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\\n}\\n#endif\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_isBackground  = a_aux.y;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\nreturn getBit(bitset, 0);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp mat3 u_tileMat3;\\nuniform highp mat3 u_viewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_currentZoom;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef SUPPORTS_TEXTURE_FLOAT\\ntarget.rgba = getAttributeData2(a_id);\\n#else\\nvec4 data0 = getAttributeData2(a_id);\\nvec4 data1 = getAttributeData3(a_id);\\ntarget.r = u88VVToFloat(data0.rg * 255.0);\\ntarget.g = u88VVToFloat(data0.ba * 255.0);\\ntarget.b = u88VVToFloat(data1.rg * 255.0);\\ntarget.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\nreturn getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getAttributeData0(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n#if !defined(HIGHLIGHT_ALL)\\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\nreturn u_vvSizeFieldStopsSizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n}\\n}\\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= u_vvOpacityValues[0]) {\\nreturn u_vvOpacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (u_vvOpacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n}\\n}\\nreturn u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= u_vvColorValues[0]) {\\nreturn u_vvColors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (u_vvColorValues[i] >= colorValue) {\\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\\n}\\n}\\nreturn u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nreturn u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},overlay:{overlay:{\"overlay.frag\":\"precision lowp float;\\nuniform lowp sampler2D u_texture;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_texture, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"overlay.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_uv;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_perspective;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\nv_uv = a_uv;\\nfloat w = 1.0 + dot(a_uv, u_perspective);\\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\\ngl_Position = vec4(w * pos.xy, 0.0, w);\\n}\"}},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\nvec4 color = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\ngl_FragColor = clamp(color, 0.0, 1.0);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"common.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nvec3 rgb = clamp(v.rgb / 255.0, 0.0, 1.0);\\nreturn vec4(rgb, currentPixel.a);\\n}\",\"getSurfaceValues.glsl\":\"#include <raster/common/mirror.glsl>\\nvoid getSurfaceValues(sampler2D imageTexture, vec2 texCoord, vec2 srcImageSize, inout float values[10]) {\\nvec2 onePixel = 1.0 / srcImageSize;\\nvec4 va = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, -1.0)));\\nvec4 vb = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, -1.0)));\\nvec4 vc = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, -1.0)));\\nvec4 vd = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 0.0)));\\nvec4 ve = texture2D(imageTexture, mirror(texCoord));\\nvec4 vf = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 0.0)));\\nvec4 vg = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 1.0)));\\nvec4 vh = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, 1.0)));\\nvec4 vi = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 1.0)));\\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\\nvalues[0] = va.r;\\nvalues[1] = vb.r;\\nvalues[2] = vc.r;\\nvalues[3] = vd.r;\\nvalues[4] = ve.r;\\nvalues[5] = vf.r;\\nvalues[6] = vg.r;\\nvalues[7] = vh.r;\\nvalues[8] = vi.r;\\nvalues[9] = alpha;\\n}\",\"inverse.glsl\":\"float invertValue(float value) {\\nfloat s = sign(value);\\nreturn (s * s) / (value + abs(s) - 1.0);\\n}\",\"mirror.glsl\":\"vec2 mirror(vec2 pos) {\\nvec2 pos1 = abs(pos);\\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\n#include <raster/common/getSurfaceValues.glsl>\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nfloat pv[10];\\ngetSurfaceValues(u_image, pixelLocation, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * u_factor.s;\\nfloat dzy = (pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(pv[4], u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},rfx:{aspect:{\"aspect.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nconst float pi = 3.14159265359;\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) / (8.0 * u_cellSize[0]);\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) / (8.0 * u_cellSize[1]);\\nalpha *= sign(abs(dzx) + abs(dzy));\\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\\nfloat aspect = aspect_rad * 180.0 / pi;\\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\\n}\"},bandarithmetic:{\"bandarithmetic.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nuniform float u_adjustments[3];\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index;\\n#ifdef NDXI\\nindex = (nir - red) * invertValue(nir + red);\\n#elif defined(SR)\\nindex = nir * invertValue(red);\\n#elif defined(CI)\\nindex = nir * invertValue(red) - 1.0;\\n#elif defined(SAVI)\\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\\n#elif defined(TSAVI)\\nfloat s = u_adjustments[0];\\nfloat a = u_adjustments[1];\\nfloat x = u_adjustments[2];\\nfloat y = -a * s + x * (1.0 + s * s);\\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\\n#elif defined(MAVI)\\nindex = 0.5 * (2.0 * (nir + 1.0) - sqrt(pow((2.0 * nir + 1.0), 2.0) - 8.0 * (nir - red)));\\n#elif defined(GEMI)\\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\\n#elif defined(PVI)\\nfloat a = u_adjustments[0];\\nfloat b = u_adjustments[1];\\nfloat y = sqrt(1.0 + a * a);\\nindex = (nir - a * red - b) * invertValue(y);\\n#elif defined(VARI)\\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\\n#elif defined(MTVI2)\\nfloat green = pv2.b;\\nfloat v = pow(sqrt((2.0 * nir + 1.0), 2.0) - 6.0 * nir - 5.0 * sqrt(red) - 0.5);\\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * v;\\n#elif defined(RTVICORE)\\nfloat green = pv2.b;\\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\\n#elif defined(EVI)\\nfloat blue = pv2.b;\\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\\nindex =  (2.5 * (nir - red)) * invertValue(denom);\\n#elif defined(WNDWI)\\nfloat g = pv2.r;\\nfloat n = pv2.g;\\nfloat s = pv2.s;\\nfloat a = u_adjustments[0];\\nfloat denom = g + a * n + (1.0 - a) * s;\\nindex = (g - a * n - (1 - a) * s) * invertValue(denom);\\n#elif defined(BAI)\\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\\n#else\\ngl_FragColor = pv;\\nreturn;\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},compositeband:{\"compositeband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\nuniform sampler2D u_image2;\\nvarying vec2 v_texcoord;\\nvoid main() {\\nvec4 p0 = texture2D(u_image, v_texcoord);\\nvec4 p1 = texture2D(u_image1, v_texcoord);\\nvec4 p2 = texture2D(u_image2, v_texcoord);\\ngl_FragColor = vec4(p0.r, p1.r, p2.r, p0.a * p1.a * p2.a);\\n}\"},contrast:{\"contrast.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#include <raster/common/contrastBrightness.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec4 result = adjustContrastBrightness(pv, false) ;\\ngl_FragColor = vec4(result.rgb * 255.0, result.a);\\n}\"},convolution:{\"convolution.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_srcImageSize;\\n#define KERNEL_SIZE_ROWS ROWS\\n#define KERNEL_SIZE_COLS COLS\\nuniform vec2 u_clampRange;\\nuniform float u_kernel[25];\\n#include <raster/common/mirror.glsl>\\nvoid main() {\\nvec3 rgb = vec3(0.0, 0.0, 0.0);\\nvec2 resolution = 1.0 / u_srcImageSize;\\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\\nfloat alpha = 1.0;\\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\\nfloat pos_row = rowOffset + float(row);\\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\\nvec4 pv = texture2D(u_image, mirror(pos));\\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\\nalpha *= pv.a;\\n}\\n}\\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(rgb * alpha, alpha);\\n}\"},curvature:{\"curvature.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform float u_zlFactor;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat d = ((pv[3] + pv[5]) * 0.5 - pv[4]);\\nfloat e = ((pv[1] + pv[7]) * 0.5 - pv[4]);\\nfloat curvature = 0.0;\\n#ifdef STANDARD\\ncurvature = -u_zlFactor * (d + e);\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n#else\\nfloat f = (-pv[0] + pv[2] + pv[6] - pv[8]) / 4.0;\\nfloat g = (-pv[3] + pv[5]) / 2.0;\\nfloat h = (pv[1] - pv[7]) / 2.0;\\nfloat g2 = g * g;\\nfloat h2 = h * h;\\n#ifdef PROFILE\\ncurvature = (u_zlFactor * (d * g2 + e * h2 + f * g * h)) / (g2 + h2);\\n#else\\ncurvature = (-u_zlFactor * (d * h2 + e * g2 - f * g * h)) / (g2 + h2);\\n#endif\\n#endif\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n}\"},extractband:{\"extractband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\ngl_FragColor = vec4(pv2, pv.a);\\n}\"},focalstatistics:{\"focalstatistics.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_srcImageSize;\\n#define KERNEL_SIZE_ROWS ROWS\\n#define KERNEL_SIZE_COLS COLS\\nuniform vec2 u_clampRange;\\n#include <raster/common/mirror.glsl>\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec2 resolution = 1.0 / u_srcImageSize;\\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\\nfloat count = 0.0;\\n#ifdef STDDEV\\nvec3 sum = vec3(0.0, 0.0, 0.0);\\nvec3 sum2 = vec3(0.0, 0.0, 0.0);\\n#endif\\nvec4 currentPixel = texture2D(u_image, v_texcoord);\\nvec3 rgb = currentPixel.rgb;\\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\\nfloat pos_row = rowOffset + float(row);\\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\\nvec4 pv = texture2D(u_image, mirror(pos));\\ncount += pv.a;\\n#ifdef MIN\\nrgb = min(rgb, pv.rgb);\\n#elif defined(MAX)\\nrgb = max(rgb, pv.rgb);\\n#elif defined(MEAN)\\nrgb += pv.rgb;\\n#elif defined(STDDEV)\\nsum += pv.rgb;\\nsum2 += (pv.rgb * pv.rgb);\\n#endif\\n}\\n}\\n#ifdef MEAN\\nrgb *= invertValue(count);\\n#elif defined(STDDEV)\\nrgb = sqrt((sum2 - sum * sum * invertValue(count)) * invertValue(count));\\n#endif\\nfloat alpha = step(0.9999, count);\\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\\n#ifdef FILL\\nrgb = (1.0 - currentPixel.a) * rgb + currentPixel.a * currentPixel.rgb;\\n#endif\\ngl_FragColor = vec4(rgb * alpha, alpha);\\n}\"},local:{\"local.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\n#ifdef ONE_CONSTANT\\nuniform float u_image1Const;\\n#ifdef TWO_CONSTANT\\nuniform float u_image2Const;\\n#endif\\nuniform mat3 u_imageSwap;\\n#endif\\nvarying vec2 v_texcoord;\\nuniform vec2 u_domainRange;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv0 = texture2D(u_image, v_texcoord);\\nfloat a = pv0.r;\\n#ifdef TWO_IMAGES\\n#ifdef ONE_CONSTANT\\nfloat b = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, 0);\\na = abc.s;\\nb = abc.t;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\n#endif\\n#elif defined(CONDITIONAL)\\n#ifdef TWO_CONSTANT\\nfloat b = u_image1Const;\\nfloat c = u_image2Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#elif defined(ONE_CONSTANT)\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nvec4 pv2 = texture2D(u_image2, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = pv2.r;\\n#endif\\n#endif\\nfloat result = a;\\nfloat alpha = pv0.a;\\n#ifdef PLUS\\nresult = a + b;\\n#elif defined(MINUS)\\nresult = a - b;\\n#elif defined(TIMES)\\nresult = a * b;\\n#elif defined(DIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOATDIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOORDIVIDE)\\nresult = floor(a * invertValue(b));\\nalpha *= float(abs(sign(b)));\\n#elif defined(SQUARE)\\nresult = a * a;\\n#elif defined(SQRT)\\nresult = sqrt(a);\\n#elif defined(POWER)\\nresult = pow(a, b);\\n#elif defined(LN)\\nresult = a <= 0.0 ? 0.0: log(a);\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_1_0)\\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_2)\\nresult = a <= 0.0 ? 0.0: log2(a);\\nalpha *= float(a > 0.0);\\n#elif defined(EXP)\\nresult = exp(a);\\n#elif defined(EXP_1_0)\\nresult = pow(10.0, a);\\n#elif defined(EXP_2)\\nresult = pow(2.0, a);\\n#elif defined(ROUNDDOWN)\\nresult = floor(a);\\n#elif defined(ROUNDUP)\\nresult = ceil(a);\\n#elif defined(INT)\\nresult = float(sign(a)) * floor(abs(a));\\n#elif defined(MOD)\\nresult = mod(a, b);\\n#elif defined(NEGATE)\\nresult = -a;\\n#elif defined(ABS)\\nresult = abs(a);\\n#elif defined(ACOS)\\nresult = abs(a) > 1.0 ? 0.0: acos(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ACOSH)\\nresult = acosh(a);\\n#elif defined(POLYFILLACOSH)\\nresult = log(a + sqrt(a * a - 1.0));\\n#elif defined(ASIN)\\nresult = abs(a) > 1.0 ? 0.0: asin(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ASINH)\\nresult = asinh(a);\\n#elif defined(POLYFILLASINH)\\nresult = log(a + sqrt(a * a + 1.0));\\n#elif defined(ATAN)\\nresult = atan(a);\\n#elif defined(ATANH)\\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\\nalpha *= step(abs(a), 1.0);\\n#elif defined(POLYFILLATANH)\\nresult = a == 1.0 ? 0.0 : 0.5 * log((1.0 + a)/(1.0 -a));\\n#elif defined(ATAN_2)\\nresult = atan(a, b);\\n#elif defined(COS)\\nresult = cos(a);\\n#elif defined(COSH)\\nresult = cosh(a);\\n#elif defined(POLYFILLCOSH)\\nfloat halfexp = exp(a) / 2.0;\\nresult = halfexp + 1.0 / halfexp;\\n#elif defined(SIN)\\nresult = sin(a);\\n#elif defined(SINH)\\nresult = sinh(a);\\n#elif defined(POLYFILLSINH)\\nfloat halfexp = exp(a) / 2.0;\\nresult = halfexp - 1.0 / halfexp;\\n#elif defined(TAN)\\nresult = tan(a);\\n#elif defined(TANH)\\nresult = tanh(a);\\n#elif defined(POLYFILLTANH)\\nfloat expx = exp(a);\\nresult = (expx - 1.0 / expx) / (expx + 1.0 / expx);\\n#elif defined(BITWISEAND)\\nresult = a & b;\\n#elif defined(BITWISEOR)\\nresult = a | b;\\n#elif defined(BITWISELEFTSHIFT)\\nresult = a << b;\\n#elif defined(BITWISERIGHTSHIFT)\\nresult = a >> b;\\n#elif defined(BITWISENOT)\\nresult = ~a;\\n#elif defined(BITWISEXOR)\\nresult = a ^ b;\\n#elif defined(BOOLEANAND)\\nresult = float((a != 0.0) && (b != 0.0));\\n#elif defined(BOOLEANNOT)\\nresult = float(a == 0.0);\\n#elif defined(BOOLEANOR)\\nresult = float((a != 0.0) || (b != 0.0));\\n#elif defined(BOOLEANXOR)\\nresult = float((a != 0.0) ^^ (b != 0.0));\\n#elif defined(GREATERTHAN)\\nresult = float(a > b);\\n#elif defined(GREATERTHANEQUAL)\\nresult = float(a >= b);\\n#elif defined(LESSTHAN)\\nresult = float(a < b);\\n#elif defined(LESSTHANEQUAL)\\nresult = float(a <= b);\\n#elif defined(EQUALTO)\\nresult = float(a == b);\\n#elif defined(NOTEQUAL)\\nresult = float(a != b);\\n#elif defined(ISNULL)\\nresult = float(alpha == 0.0);\\nalpha = 1.0;\\n#elif defined(SETNULL)\\nfloat maskValue = float(a == 0.0);\\nresult = maskValue * b;\\nalpha *= maskValue;\\n#elif defined(CONDITIONAL)\\nfloat weight = float(abs(sign(a)));\\nresult = weight * b + (1.0 - weight) * c;\\n#endif\\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\\nresult = isInvalid ? 0.0 : result;\\nalpha *= float(!isInvalid);\\n#ifdef ROUND_OUTPUT\\nresult = floor(result + 0.5);\\n#endif\\ngl_FragColor = vec4(result, result, result, alpha);\\n}\"},mask:{\"mask.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_INCLUDED_RANGES 6\\n#define LEN_NODATA_VALUES 6\\nuniform highp float u_includedRanges[6];\\nuniform highp float u_noDataValues[6];\\nfloat maskFactor(float bandValue, float fromValue, float to) {\\nfloat factor = 1.0;\\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\\nfactor *= float(u_noDataValues[i] != bandValue);\\n}\\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\\nreturn factor;\\n}\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\\n#ifdef MULTI_BAND\\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\\nfloat maskFactor = redFactor * greenFactor * blueFactor;\\ngl_FragColor = pv * maskFactor;\\n#else\\ngl_FragColor = pv * redFactor;\\n#endif\\n}\"},ndvi:{\"ndvi.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index = (nir - red) * invertValue(nir + red);\\n#ifdef SCALED\\nindex = floor((index + 1.0) * 100.0 + 0.5);\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},remap:{\"remap.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_REMAP_RANGES 18\\n#define LEN_NODATA_RANGES 12\\nuniform highp float u_rangeMaps[18];\\nuniform highp float u_noDataRanges[12];\\nuniform highp float u_unmatchMask;\\nuniform vec2 u_clampRange;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat factor = 1.0;\\nfloat bandValue = pv.r;\\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\\nfactor *= inside;\\n}\\nfloat mapValue = 0.0;\\nfloat includeMask = 0.0;\\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\\n}\\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\\n}\"},slope:{\"slope.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform float u_zFactor;\\nuniform vec2 u_srcImageSize;\\nuniform float u_pixelSizePower;\\nuniform float u_pixelSizeFactor;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * xf;\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * yf;\\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\\n#ifdef PERCENT_RISE\\nfloat percentRise = rise2run * 100.0;\\ngl_FragColor = vec4(percentRise, percentRise, percentRise, alpha);\\n#else\\nfloat degree = atan(rise2run) * 57.2957795;\\ngl_FragColor = vec4(degree, degree, degree, alpha);\\n#endif\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying highp vec2 v_texcoord;\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\\nval = clamp(val, minCutOff, maxCutOff);\\nfloat stretchedVal;\\n#ifdef USE_GAMMA\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\\n#else\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n#endif\\n#ifdef ROUND_OUTPUT\\nstretchedVal = floor(stretchedVal + 0.5);\\n#endif\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec4 currentPixel = texture2D(u_image, v_texcoord);\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\\n#ifdef MULTI_BAND\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\\n#else\\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\\n#endif\\n}\"},vs:{\"vs.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ngl_FragColor = 0.75 * color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport r from\"./shaderRepository.js\";import{ShaderCompiler as e}from\"../../../../../webgl/ShaderCompiler.js\";function o(e){let o=r;return e.split(\"/\").forEach((r=>{o&&(o=o[r])})),o}const t=new e(o);function n(r){return t.resolveIncludes(r)}export{n as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nclass t{static getStorageSpec(t){return null}static createOrUpdateRendererSchema(t,e){return null!=t&&\"default\"===t.type?t:{type:\"default\"}}static getVariation(t){return{}}static getVariationHash(t){return 0}}t.type=\"default\",t.programSpec=null;export{t as Technique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{writeColor as e}from\"../../color.js\";import{dotDensityMaxFields as t}from\"../../definitions.js\";import{Technique as o}from\"../Technique.js\";import{DataType as r}from\"../../../../../webgl/enums.js\";class a extends o{static getStorageSpec({attributes:e}){return{visualVariables:!1,attributes:e??null}}static _createRendererSchema(){return{type:\"dot-density\",colors:new Float32Array(32),dotValue:-1,dotSize:-1,dotScale:-1,dotBlending:!1,backgroundColor:new Float32Array(4),activeDots:new Float32Array(8),seed:-1}}static createOrUpdateRendererSchema(o,r){const{attributes:a,dotValue:n,referenceScale:i,dotSize:l,dotBlendingEnabled:d,seed:s,backgroundColor:c}=r,u=null!=o&&\"dot-density\"===o.type?o:this._createRendererSchema();u.dotValue=n,u.dotSize=l,u.dotScale=i,u.dotBlending=d,u.seed=s;const{colors:m,activeDots:g,backgroundColor:p}=u;for(let y=0;y<t;y++){const t=y>=a.length?null:a[y].color;e(m,t,4*y)}for(let e=0;e<8;e++)g[e]=e<r.attributes.length?1:0;return e(p,c),u}static getVariation(e){return{ddDotBlending:e.dotBlending}}static getVariationHash(e){return e.dotBlending?1:0}}a.type=\"dot-density\",a.programSpec={shader:\"materials/fill\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:3,type:r.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:r.UNSIGNED_BYTE},{location:3,name:\"a_inverseArea\",count:1,type:r.FLOAT}]}};export{a as DotDensityTechnique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{pt2px as e}from\"../../../../../../core/screenUtils.js\";import{generateGradient as t}from\"../../../../../../renderers/support/heatmapUtils.js\";import{Technique as a}from\"../Technique.js\";import{DataType as r}from\"../../../../../webgl/enums.js\";class i extends a{static getStorageSpec({field:e,valueExpression:t}){return{visualVariables:!1,attributes:e||t?[{field:e,valueExpression:t}]:null}}static _createRendererSchema(){return{type:\"heatmap\",radius:-1,referenceScale:-1,isFieldActive:0,minDensity:-1,densityRange:-1,kernel:null,gradient:null,gradientHash:\"invalid\"}}static createOrUpdateRendererSchema(a,r){const{radius:i,minDensity:n,maxDensity:s,referenceScale:o,field:c,valueExpression:l,colorStops:m}=r,p=s-n,d=c||l?1:0,u=m.map((({color:e,ratio:t})=>`${t}:${e.toString()}`)).join();let h,y=!0;return null!=a&&\"heatmap\"===a.type?(h=a,y=u!==a.gradientHash):h=this._createRendererSchema(),h.radius=e(i),h.minDensity=n,h.densityRange=p,h.referenceScale=o,h.isFieldActive=d,y&&(h.gradient=t(m),h.gradientHash=u),h}}i.type=\"heatmap\",i.programSpec={shader:\"materials/icon/heatmapAccumulate\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:r.SHORT},{location:4,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE}]}};export{i as HeatmapTechnique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../../Color.js\";import{pt2px as t}from\"../../../../../../core/screenUtils.js\";import{writeColor as o}from\"../../color.js\";import{chartMaxFields as r}from\"../../definitions.js\";import{Technique as a}from\"../Technique.js\";import{DataType as n}from\"../../../../../webgl/enums.js\";class i extends a{static getStorageSpec({attributes:e}){return{visualVariables:!0,attributes:e??null}}static _createRendererSchema(){return{type:\"pie-chart\",colors:new Float32Array(4*r),defaultColor:new Float32Array(4),othersColor:new Float32Array(4),outlineColor:new Float32Array(4),holePercentage:0,sectorThreshold:0,outlineWidth:1,numberOfFields:10}}static createOrUpdateRendererSchema(a,n){const{attributes:i,defaultColor:l,holePercentage:s,othersCategory:c,outline:u}=n,m=null!=a&&\"pie-chart\"===a.type?a:this._createRendererSchema();for(let t=0;t<r;t++){const r=t>=i.length?new e([0,0,0,0]):i[t].color;o(m.colors,r,4*t)}return o(m.defaultColor,l),o(m.othersColor,c?.color),o(m.outlineColor,u?.color),m.outlineWidth=t(u?.width||0),m.holePercentage=s,m.sectorThreshold=c?.threshold||0,m.numberOfFields=i.length,m}static getVariation(e){return{numberOfFields:e.numberOfFields}}static getVariationHash(e){return e.numberOfFields}}i.type=\"pie-chart\",i.programSpec={shader:\"materials/pie\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:n.SHORT},{location:2,name:\"a_texCoords\",count:2,type:n.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:n.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:n.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:n.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:n.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};export{i as PieChartTechnique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Error.js\";import{WGLGeometryType as r,WGLSymbologyType as t}from\"../enums.js\";import{MaterialKeyBase as o}from\"../materialKey/MaterialKey.js\";import{Technique as i}from\"./Technique.js\";import{DotDensityTechnique as n}from\"./dotDensity/TechniqueDotDensity.js\";import{HeatmapTechnique as a}from\"./heatmap/TechniqueHeatmap.js\";import{PieChartTechnique as m}from\"./pieChart/TechniquePieChart.js\";function s(r,t){if(r.type!==t)throw new e(\"material-view-model:unexpected-renderer-schema\",`expected to find renderer schema of type \"${t}\" but found type \"${r.type}\"`)}function c(e){switch(e?.type){case\"dot-density\":return n;case\"heatmap\":return a;case\"pie-chart\":return m;default:return i}}function p(e){const{geometryType:s,symbologyType:c}=o.load(e);switch(s){case r.FILL:if(c===t.DOT_DENSITY)return n;break;case r.MARKER:switch(c){case t.HEATMAP:return a;case t.PIE_CHART:return m}}return i}export{s as assertRendererSchema,p as getTechniqueFromMaterialKey,c as getTechniqueFromRenderer};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nfunction n(n){return window.WebGL2RenderingContext&&n instanceof window.WebGL2RenderingContext}export{n as default};\n"],"names":["n","Float32Array","t","r","e","a","o","u","s","c","i","f","l","_","y","w","N","Object","freeze","defineProperty","__proto__","ONES","UNIT_W","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","clone","create","createView","fromValues","ones","unitW","unitX","unitY","unitZ","zeros","Symbol","toStringTag","value","p","constructor","super","arguments","this","_color","dispose","_program","prepareState","_ref","context","setStencilTestEnabled","setBlendingEnabled","setFaceCullingEnabled","setColorMask","setStencilOp","KEEP","REPLACE","setStencilWriteMask","setStencilFunction","ALWAYS","draw","state","requestRender","allowDelayedRender","geometry","location","name","count","type","SHORT","d","getVAO","attributes","bufferLayouts","indexBuffer","m","compiled","useProgram","setUniform2fv","setUniform4fv","setUniformMatrix3fv","displayMat3","bindVAO","drawElements","TRIANGLES","size","UNSIGNED_INT","_desc","vsPath","fsPath","Map","setBlendFunctionSeparate","ONE","ONE_MINUS_SRC_ALPHA","GREATER","painter","isReady","computedOpacity","dvsMat3","isWrapAround","perspectiveTransform","texture","timeline","begin","materialManager","getProgram","FLOAT","tex","UNSIGNED_SHORT","v","bindTexture","setUniform1i","setUniform1f","drawArrays","TRIANGLE_STRIP","end","getGeometryType","FILL","supportsSymbology","DOT_DENSITY","drawGeometry","_N$programSpec","rendererInfo","requiredLevel","passOptions","E","g","load","materialKey","data","S","T","shader","I","vertexLayout","U","hittestAttributes","x","programSpec","UNSIGNED_BYTE","normalized","symbologyType","SIMPLE","OUTLINE_FILL_SIMPLE","splice","h","L","_getTriangleDesc","POINTS","O","G","D","getMaterialProgram","_setSharedUniforms","row","b","col","R","key","M","setUniform2f","Math","floor","textureBinding","textureManager","bindTextures","level","j","pixelRatio","_setSizeVVUniforms","_setColorAndOpacityVVUniforms","B","target","A","indexCount","F","indexFrom","Uint32Array","BYTES_PER_ELEMENT","_drawFills","PIE_CHART","_drawMarkers","rendererSchema","colors","defaultColor","othersColor","outlineColor","holePercentage","sectorThreshold","outlineWidth","_patternMatrix","_programOptions","id","pattern","_vao","drawMany","styleLayerUID","_loadWGLResources","displayLevel","styleLayer","backgroundMaterial","vectorTilesMaterialManager","getPaintValue","window","devicePixelRatio","spriteMosaic","P","drawPhase","HITTEST","k","getMosaicItemPosition","tl","br","page","getPageSize","bind","LINEAR","setUniform4f","z","rangeX","transforms","dvs","max","round","width","EQUAL","Int8Array","createVertex","STATIC_DRAW","getAttributeLocations","getLayoutInfo","some","_e$layerData$get$circ","_e$layerData$get","layerData","get","circleIndexCount","circleMaterial","VIEWPORT","displayViewMat3","has","setDataUniforms","prepareForRendering","vao","stencilRef","circleIndexStart","triangleCount","_fillProgramOptions","_outlineProgramOptions","renderPass","fillIndexCount","outlineIndexCount","getPaintProperty","isDataDriven","getValue","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","fillMaterial","V","fillVAO","patternMap","fillIndexStart","outlineMaterial","outlineVAO","outlineIndexStart","sdf","_e$layerData$get$line","lineIndexCount","lineMaterial","getDashKey","getLayoutValue","lineIndexStart","_iconProgramOptions","_sdfProgramOptions","_spritesTextureSize","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","AUTO","POINT","MAP","isIconSDF","rotation","updateOpacityInfo","iconVAO","performance","now","lastOpacityUpdate","_renderIconRange","getWidth","getHeight","_setStencilState","glyphMosaic","textMaterial","glyphPerPageElementsMap","_glyphTextureSize","height","W","H","textVAO","forEach","_renderGlyphRange","is3D","stencilSymbols","LABEL","mapAligned","abs","LINE","BYTE","TEXT","_setRotationVVUniforms","marker","line","fill","text","label","clip","stencil","bitmap","overlay","tileInfo","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","dotDensity","_dotTextureSize","_dotTextures","_dotSamplers","Int32Array","_dotVAO","_dotDesc","_disposeTextures","_dotFBO","_drawDotLocations","_drawDotDensity","_createDotDensityMesh","divisor","offset","stride","dotSize","getViewport","dotScale","activeDots","backgroundColor","dotValue","setViewport","getBoundFramebufferObject","_createFBO","bindFramebuffer","setClearColor","clear","gl","COLOR_BUFFER_BIT","STENCIL_BUFFER_BIT","scale","setUniformMatrix4fv","_bindDotDensityTextures","colorTexture","samplingMode","NEAREST","wrapMode","CLAMP_TO_EDGE","DEPTH_STENCIL","length","_createDotDensityTextures","seed","setUniform1iv","Int16Array","_seed","_allocDotDensityTexture","getFloat","dataType","heatmap","pieChart","getLogger","strideInBytes","MARKER","HEATMAP","C","Uint8Array","$","BUTT","ROUND","SQUARE","error","concat","MITER","BEVEL","OPACITY","COLOR","ROTATION","SIZE","vertexCount","vertexFrom","Y","push","buffers","q","INT","K","UNSIGNED_SHORT_4_4_4_4","Uint16Array","J","set","Q","Z","ee","_t$n","map","X","strides","te","ne","pe","path","re","url","imageData","se","contentType","ae","startsWith","ie","includes","ce","oe","ue","toLowerCase","le","cim","dashTemplate","style","fe","ye","me","maxVVSize","de","charCodeAt","trim","test","_e$cim","markerPlacement","_rctx","_vertexBuffer","_count","unbind","coords","lengths","slice","undefined","_cache","vertices","indices","primitiveType","isMapSpace","fromRect","_ref2","fromScreenExtent","xmin","ymin","xmax","ymax","fromPath","fromGeometry","_n$geometry","fromPolygon","fromMapExtent","toScreen","_ref3","destroy","vertexBuffers","elementType","getIndexBuffer","createIndex","getVertexBuffers","keys","reduce","parseFloat","_clip","stage","_handle","version","_invalidate","ready","fromClipArea","_destroyGL","mesh","remove","_lastWidth","_lastHeight","_createMesh","_createTransforms","_createScreenRect","left","right","top","bottom","clips","_updateClippingInfo","renderChildren","_renderPasses","prepareRenderPasses","render","registerRenderPass","brushes","_clippingInfos","LABEL_ALPHA","DEBUG","HIGHLIGHT","items","nearest","defines","mips","bilinear","bicubic","trilinear","LINEAR_MIPMAP_LINEAR","resolution","isSourceScaled","_quad","renderingOptions","source","blendFunction","coordScale","setSamplingProfile","brushEffect","visible","pixelFormat","internalFormat","referenceScale","radius","loadQualityProfile","isFieldActive","GEQUAL","createOptions","_prevFBO","_accumulateFramebuffer","detachDepthStencilBuffer","_accumulateOutputStencilBuffer","_resolveGradientTexture","_tileQuad","_prevViewport","_loadResources","_updateResources","setBlendFunction","minDensity","densityRange","PI","_this$_accumulateOutp","_this$_accumulateFram","_this$_resolveGradien","_this$_tileQuad","requiresSharedStencilBuffer","getSharedStencilBuffer","gradientHash","gradient","_prevGradientHash","resize","setData","depthStencil","descriptor","errorOnce","blitFramebuffer","_qualityProfile","textureFloat","colorBufferFloat","capabilities","textureFloatLinear","textureHalfFloat","textureHalfFloatLinear","floatBlend","driverTest","floatBufferBlend","result","R32F","R16F","warnOnce","RED","RGBA","HALF_FLOAT","WEBGL1","_this$_outlineProgram","_this$_tileInfoProgra","_this$_outlineVertexA","_this$_tileInfoVertex","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_canvas","rangeY","LINE_STRIP","_getTexture","triangleCountReportedInDebug","document","createElement","setAttribute","getContext","font","textAlign","textBaseline","clearRect","fillStyle","fillRect","fillText","isImmutable","_initialized","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialize","setStencilFunctionSeparate","FRONT_AND_BACK","_computeDesc","commit","getGeometry","attributeView","forEachCommand","position","distance","tileMat3","viewMat3","vvSizeMinMaxValue","vvSizeScaleStops","vvSizeScaleStopsValue","vvSizeFieldStops","getSizeVVFieldStops","setUniform1fv","values","sizes","vvSizeUnitValue","vvSizeUnitValueToPixelsRatio","vvColor","vvColorValues","vvColors","vvOpacity","vvOpacityValues","vvOpacities","vvRotation","vvMaterialParameters","vvRotationType","findIndex","join","_f$programSpec","NONE","CLIP","NUM_DRAW_PHASES","SIZE_MINMAX_VALUE","SIZE_SCALE_STOPS","SIZE_FIELD_STOPS","SIZE_UNIT_VALUE","MINMAX_TARGETS_OUTLINE","SCALE_TARGETS_OUTLINE","FIELD_TARGETS_OUTLINE","UNIT_TARGETS_OUTLINE","SPRITE","GLYPH","DEFAULT","OUTLINE_FILL","buffer","shaders","vertexShader","fragmentShader","background","bitBlit","blend","debug","dot","filtering","fx","integrate","heatmapResolve","highlight","magnifier","materials","hittest","icon","heatmapAccumulate","pie","shared","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","common","flow","imagery","particles","streamlines","hillshade","lut","magdir","reproject","rfx","aspect","bandarithmetic","compositeband","contrast","convolution","curvature","extractband","focalstatistics","local","mask","ndvi","remap","slope","stretch","vs","scalar","util","split","resolveIncludes","getStorageSpec","createOrUpdateRendererSchema","getVariation","getVariationHash","visualVariables","_createRendererSchema","dotBlending","dotBlendingEnabled","color","ddDotBlending","field","valueExpression","kernel","maxDensity","colorStops","ratio","toString","numberOfFields","othersCategory","outline","threshold","geometryType","WebGL2RenderingContext"],"sourceRoot":""}