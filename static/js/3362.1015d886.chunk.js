"use strict";(self.webpackChunkok_wpa_maps=self.webpackChunkok_wpa_maps||[]).push([[3362],{83362:(e,t,i)=>{i.r(t),i.d(t,{default:()=>K});var s=i(27366),o=(i(59486),i(52639)),r=i(14921),n=i(40281),h=i(10064),a=i(91505),l=i(32718),c=i(92026),p=i(47898),d=i(94172),v=i(17842),_=i(49861),y=(i(25243),i(63780),i(93169),i(69912)),m=i(69662),u=i(93655),g=i(16072),x=i(50951),f=i(85577),b=i(20008),G=i(53503),V=i(74982),w=i(83089),M=i(70040),S=i(1614),C=i(87888),k=i(87268),E=i(77560),I=i(34019),O=i(73476),T=i(40524),R=i(64357),H=i(59418),A=i(29909),Z=i(585);class z{constructor(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape-start"}}class F{constructor(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape"}}class U{constructor(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape-stop"}}class D{constructor(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move-start"}}class L{constructor(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move"}}class P{constructor(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move-stop"}}class W{constructor(e){this.added=e,this.type="vertex-select"}}class Y{constructor(e){this.removed=e,this.type="vertex-deselect"}}class N{constructor(e,t,i,s){this.added=e,this.graphic=t,this.oldGraphic=i,this.vertices=s,this.type="vertex-add"}}class Q{constructor(e,t,i,s){this.removed=e,this.graphic=t,this.oldGraphic=i,this.vertices=s,this.type="vertex-remove"}}const X=M.Xd.reshapeGraphics,j={vertices:{default:new g.default({style:"circle",size:X.vertex.size,color:X.vertex.color,outline:{color:X.vertex.outlineColor,width:1}}),hover:new g.default({style:"circle",size:X.vertex.hoverSize,color:X.vertex.hoverColor,outline:{color:X.vertex.hoverOutlineColor,width:1}}),selected:new g.default({style:"circle",size:X.selected.size,color:X.selected.color,outline:{color:X.selected.outlineColor,width:1}})},midpoints:{default:new g.default({style:"circle",size:X.midpoint.size,color:X.midpoint.color,outline:{color:X.midpoint.outlineColor,width:1}}),hover:new g.default({style:"circle",size:X.midpoint.size,color:X.midpoint.color,outline:{color:X.midpoint.outlineColor,width:1}})}};let J=class extends a.Z.EventedAccessor{constructor(e){super(e),this._activeOperationInfo=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this._tooltip=null,this._translateGraphicTooltipInfo=null,this._translateVertexTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.layer=null,this.midpointGraphics=new n.Z,this.midpointSymbol=new g.default({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=[],this.snappingManager=null,this.symbols=j,this.tooltipOptions=new E.Z,this.type="reshape",this.vertexGraphics=new n.Z,this.view=null}initialize(){const e=this.view;this._highlightHelper=new V.Z({view:e}),this._setup(),this.addHandles([(0,d.gx)((()=>null===e||void 0===e?void 0:e.ready),(()=>{const{layer:e,view:t}=this;(0,w.p)(t,e),this.addHandles(t.on("key-down",(e=>this._keyDownHandler(e)),S.f.TOOL))}),{once:!0,initial:!0}),(0,d.Wy)((()=>this.graphic),(()=>this.refresh())),(0,d.Wy)((()=>this.layer),((e,t)=>{t&&(this._clearSelection(),this._resetGraphics(t)),this.refresh()})),(0,d.Wy)((()=>this.enableMidpoints),(()=>this.refresh())),(0,d.YP)((()=>this.tooltipOptions.enabled),(e=>{this._tooltip=e?new O.u({view:this.view}):(0,c.SC)(this._tooltip)}),d.tX),(0,d.YP)((()=>this.view.effectiveTheme.accentColor),(()=>this._updateSymbolsForTheme()),d.nn)])}destroy(){var e;this._reset(),null!==(e=this._mover)&&void 0!==e&&e.destroy(),this._mover=null,this._tooltip=(0,c.SC)(this._tooltip)}set highlightsEnabled(e){var t;null!==(t=this._highlightHelper)&&void 0!==t&&t.removeAll(),this._set("highlightsEnabled",e),this._setUpHighlights()}get state(){const e=this.view.ready,t=!(!this.graphic||!this.layer);return e&&t?"active":e?"ready":"disabled"}isUIGraphic(e){const t=[];return this.graphic&&t.push(this.graphic),t.concat(this.vertexGraphics.items,this.midpointGraphics.items),t.length>0&&t.includes(e)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_setup(){const{graphic:e,layer:t}=this;if(!t||null==(null===e||void 0===e?void 0:e.geometry))return;const i=e.geometry;"mesh"!==i.type&&"extent"!==i.type?("polygon"===i.type&&(0,m.pW)(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpHighlights(){var e;this.highlightsEnabled&&this.graphic&&(null===(e=this._highlightHelper)||void 0===e||e.add(this.graphic))}_setUpGeometryHelper(){const e=this.graphic.geometry;if(null==e||"mesh"===e.type||"extent"===e.type)return void this._logGeometryTypeError();const t="multipoint"===e.type?new A.Z({paths:e.points,spatialReference:e.spatialReference}):e;this._editGeometryOperations=k.c.fromGeometry(t,x.JY.Local)}_saveSnappingContextForHandle(e,t){var i;this._snappingGraphicsLayer=new u.Z({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer),this._snappingContext=new I.N({editGeometryOperations:this._editGeometryOperations,elevationInfo:{mode:"on-the-ground",offset:0},pointer:(null===(i=t.viewEvent)||void 0===i?void 0:i.pointerType)||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new f.r(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(e)})}_reset(){var e;this._clearSelection(),null!==(e=this._highlightHelper)&&void 0!==e&&e.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){var e;null!=this.snappingManager&&this.snappingManager.doneSnapping(),null!=this._snappingGraphicsLayer&&(null!==(e=this.view)&&void 0!==e&&e.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=(0,c.SC)(this._editGeometryOperations),this._snappingTask=(0,c.IM)(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(e){this._removeMidpointGraphics(e),this._removeVertexGraphics(e),this._set("selectedVertices",[])}_removeMidpointGraphics(e){const t=e||this.layer;t&&t.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach((e=>e.destroy())),this.midpointGraphics.removeAll()}_removeVertexGraphics(e){const t=e||this.layer;t&&t.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach((e=>e.destroy())),this.vertexGraphics.removeAll()}_getCoordinatesForUI(e){const t=(0,m.nA)(e.clone());if("polygon"===e.type)for(const i of t){const e=i[i.length-1];i[0][0]===e[0]&&i[0][1]===e[1]&&i.length>2&&i.pop()}return t}_setupGraphics(){const e=this.graphic.geometry;if(null!=e&&("polyline"===e.type||"polygon"===e.type)){const t=this._getCoordinatesForUI(e);this.enableMidpoints&&this._setUpMidpointGraphics(t),this.enableVertices&&this._setUpVertexGraphics(t)}}_setUpMidpointGraphics(e){this._removeMidpointGraphics();const t=this._createMidpointGraphics(e);this.midpointGraphics.addMany(t),this.layer.addMany(t)}_setUpVertexGraphics(e){this._removeVertexGraphics();const t=this._createVertexGraphics(e);this.vertexGraphics.addMany(t),this._storeRelatedVertexIndices(),this.layer.addMany(t)}_createVertexGraphics(e){const{_graphicAttributes:t,symbols:i,view:{spatialReference:s}}=this,r=[];return null!==e&&void 0!==e&&e.forEach(((e,n)=>{e.forEach(((e,h)=>{var a;const[l,c,p]=e;r.push(new o.Z({geometry:new Z.Z({x:l,y:c,z:p,spatialReference:s}),symbol:null===i||void 0===i||null===(a=i.vertices)||void 0===a?void 0:a.default,attributes:{...t,pathIndex:n,pointIndex:h}}))}))})),r}_createMidpointGraphics(e){const{_graphicAttributes:t,symbols:i,view:{spatialReference:s}}=this,r=[];return null!==e&&void 0!==e&&e.forEach(((e,n)=>{e.forEach(((h,a)=>{var l;const[c,p,d]=h,v=e[a+1]?a+1:0;if("polygon"===(null===(l=this.graphic.geometry)||void 0===l?void 0:l.type)||0!==v){const[h,l,_]=e[v],[y,u,g]=(0,m.Gi)([c,p,d],[h,l,_]);r.push(new o.Z({geometry:new Z.Z({x:y,y:u,z:g,spatialReference:s}),symbol:i.midpoints.default,attributes:{...t,pathIndex:n,pointIndexStart:a,pointIndexEnd:v}}))}}))})),r}_updateSymbolsForTheme(){var e;const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:null===(e=this.symbols.vertices.hover)||void 0===e?void 0:e.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const i of this.vertexGraphics)this._isSelected(i)?i.symbol=this.symbols.vertices.selected:this._hoverGraphic===i?i.symbol=this.symbols.vertices.hover:i.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const e=this.vertexGraphics.items;if(!e)return;const t=e.map((e=>{let{geometry:t}=e;return{x:t.x,y:t.y}}));for(let i=0;i<t.length;i++){const s=[];for(let e=0;e<t.length;e++){if(i===e)continue;const o=t[i],r=t[e];o.x===r.x&&o.y===r.y&&s.push(e)}e[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:e,graphic:t,midpointGraphics:i,vertexGraphics:s,view:o}=this,r=s.concat(i).items;e&&r.push(t),this._mover=new G.default({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:r,view:o,callbacks:{onGraphicClick:e=>this._onGraphicClickCallback(e),onGraphicMoveStart:e=>this._onGraphicMoveStartCallback(e),onGraphicMove:e=>this._onGraphicMoveCallback(e),onGraphicMoveStop:e=>this._onGraphicMoveStopCallback(e),onGraphicPointerOver:e=>this._onGraphicPointerOverCallback(e),onGraphicPointerOut:e=>this._onGraphicPointerOutCallback(e)}})}_onGraphicClickCallback(e){e.viewEvent.stopPropagation();const t=e.graphic;if(t===this.graphic)this.clearSelection(),this.emit("graphic-click",e),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(e);else if(this._isMidpoint(t)){if(2===e.viewEvent.button)return;const i=this.graphic.clone(),s=this._createVertexFromMidpoint(t);this.refresh(),this._emitVertexAddEvent([t],i,s)}else this._isVertex(t)&&(e.viewEvent.stopPropagation(),2===e.viewEvent.button?this._removeVertices(t):(e.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(t)?this._removeFromSelection(t,!0):this._addToSelection(t)))}_setUpOperation(e){const{graphic:t,dx:i,dy:s}=e,o=t===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(t,e),this._activeOperationInfo={target:this.graphic,mover:t,operationType:o?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(e){const{dx:t,dy:i,graphic:s}=e;if(s===this.graphic){const{geometry:o}=s;return this._setUpOperation(e),this._emitMoveStartEvent(t,i),void(null!=o&&"point"===o.type&&this._onHandleMove(s,t,i,e,(()=>{this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(t,i)})))}if(!this.selectedVertices.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const e=this.graphic.clone(),t=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],e,t)}this._addToSelection(s)}this._setUpOperation(e),this._emitReshapeStartEvent(s),this._onHandleMove(s,t,i,e,(()=>{this._updateTooltip(s,e.viewEvent),this._emitReshapeEvent(s)}))}_onGraphicMoveCallback(e){const t=this._activeOperationInfo;if(!t)return;const{dx:i,dy:s,graphic:o}=e;t.totalDx+=i,t.totalDy+=s;const{operationType:r}=t,{geometry:n}=o;if(null!=n)if("move"!==r)this._onHandleMove(o,i,s,e,(()=>{this._updateTooltip(o,e.viewEvent),this._emitReshapeEvent(o)}));else if("point"===n.type)this._onHandleMove(o,i,s,e,(()=>{this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(i,s)}));else if("polyline"===n.type||"polygon"===n.type){const t=this._getCoordinatesForUI(n);this._updateVertexGraphicLocations(t),this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(i,s)}}_onGraphicMoveStopCallback(e){const t=this._activeOperationInfo;if(!t)return;const{dx:i,dy:s,graphic:o}=e,{operationType:r}=t;t.totalDx+=i,t.totalDy+=s,this._onHandleMove(o,i,s,e,(()=>"move"===r?this._emitMoveStopEvent():this._emitReshapeStopEvent(o))),this._isMidpoint(o)?this.refresh():(this._updateTooltip(this._isVertex(o)?o:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(e){const t=this.view.spatialReference;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:o}=i.attributes,[r,n,h]=e[s][o];i.geometry=new Z.Z({x:r,y:n,z:h,spatialReference:t})}this._updateMidpointGraphicLocations(e)}_updateMidpointGraphicLocations(e){for(const t of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:o}=t.attributes,[r,n,h]=e[i][s],[a,l,c]=e[i][o],[p,d,v]=(0,m.Gi)([r,n,h],[a,l,c]);t.geometry=new Z.Z({x:p,y:d,z:v,spatialReference:this.view.spatialReference})}}_getIndicesForVertexGraphic(e){let{attributes:t}=e;return[(null===t||void 0===t?void 0:t.pathIndex)||0,(null===t||void 0===t?void 0:t.pointIndex)||0]}_getVertexFromEditGeometry(e){const[t,i]=this._getIndicesForVertexGraphic(e);return this._editGeometryOperations.data.components[t].vertices[i]}_onHandleMove(e,t,i,s,o){(0,c.IM)(this._snappingTask);const n=this._snappingContext;if(!n)return;const h=e.geometry,a="graphic-move-stop"===s.type;if(null!=this.snappingManager&&this.selectedVertices.length<2&&!a){const s=this.snappingManager;this._stagedVertex=s.update({point:h,context:n}),this._syncGeometryAfterVertexMove(e,new Z.Z(this._stagedVertex),t,i,a),o(),this._snappingTask=(0,r.vr)((async r=>{const l=await s.snap({point:h,context:n,signal:r});l.valid&&(this._stagedVertex=l.apply(),this._syncGeometryAfterVertexMove(e,new Z.Z(this._stagedVertex),t,i,a),o())}))}else{const s=null!=this._stagedVertex?new Z.Z(this._stagedVertex):h;this._syncGeometryAfterVertexMove(e,s,t,i,a),o()}}async _syncGeometryAfterVertexMove(e,t,i,s){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const r=this._editGeometryOperations.data.geometry;if("point"===r.type)e.geometry=t;else if("mesh"===r.type)e.geometry=r.centerAt(t),e.notifyGeometryChanged();else{const{x:n,y:h,z:a}=t,[l,c]=this._getIndicesForVertexGraphic(e);let p=(0,m.nA)(r);const d=p[l].length-1,v=null!=a?[n,h,a]:[n,h];p[l][c]=v,"polygon"===r.type&&(0===c?p[l][d]=v:c===d&&(p[l][0]=v)),this._isVertex(e)&&(p=this._moveRelatedCoordinates(p,e,v),p=this._moveSelectedHandleCoordinates(p,e,i,s,"polygon"===r.type),this._updateMidpointGraphicLocations(p)),this.graphic.geometry=r.clone();const _=this._getVertexFromEditGeometry(e),y=n-_.pos[0],u=h-_.pos[1];this._editGeometryOperations.moveVertices([_],y,u,0),o&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(e),t):e.geometry=t)}}_moveRelatedCoordinates(e,t,i){const{relatedGraphicIndices:s}=t.attributes;for(const o of s){const s=this.vertexGraphics.at(o),{pathIndex:r,pointIndex:n}=s.attributes;e[r][n]=i,s.geometry=t.geometry}return e}_moveSelectedHandleCoordinates(e,t,i,s,o){for(const r of this.selectedVertices)if(r!==t){const{pathIndex:t,pointIndex:n,relatedGraphicIndices:h}=r.attributes,a=(0,b.e7)(r.geometry,i,s,this.view),l=e[t].length-1;e[t][n]=[a.x,a.y],r.geometry=a,o&&(0===n?e[t][l]=[a.x,a.y]:n===l&&(e[t][0]=[a.x,a.y]));for(const i of h){const t=this.vertexGraphics.at(i),{pathIndex:s,pointIndex:o}=t.attributes;e[s][o]=[a.x,a.y],t.geometry=a}}return e}_onGraphicPointerOverCallback(e){const t=e.graphic;this._hoverGraphic=t;const i=this._isVertex(t);i&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.hover),this._updateTooltip(i?t:null),this._updateHoverCursor(t)}_onGraphicPointerOutCallback(e){const t=e.graphic;this._hoverGraphic=null,this._isVertex(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(e){const{_graphicAttributes:t,graphic:i}=this,s=i.geometry;if(null==s||"polygon"!==s.type&&"polyline"!==s.type)return[];const o=s.clone(),r=[],{pathIndex:n,pointIndexStart:h,pointIndexEnd:a}=e.attributes,{x:l,y:c,z:p}=e.geometry,d=0===a?h+1:a,v=(0,m.nA)(o);return v[n].splice(d,0,null!=p?[l,c,p]:[l,c]),e.attributes={...t,pathIndex:n,pointIndex:d,relatedGraphicIndices:[]},r.push({coordinates:v[n][d],componentIndex:n,vertexIndex:d}),this.graphic.geometry=o,r}_addToSelection(e){e instanceof o.Z&&(e=[e]);for(const t of e)t.symbol=this.symbols.vertices.selected;this._set("selectedVertices",this.selectedVertices.concat(e)),this._emitSelectEvent(e)}_removeFromSelection(e,t){const{vertices:i}=this.symbols,s=t?i.hover:i.default;e instanceof o.Z&&(e=[e]);for(const o of e)this.selectedVertices.splice(this.selectedVertices.indexOf(o),1),this._set("selectedVertices",this.selectedVertices),o.set("symbol",s);this._emitDeselectEvent(e)}_clearSelection(){if(this.selectedVertices.length){const e=this.selectedVertices;for(const t of this.selectedVertices)t.set("symbol",this.symbols.vertices.default);this._set("selectedVertices",[]),this._emitDeselectEvent(e)}}_keyDownHandler(e){C.Sn.delete.includes(e.key)&&!e.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(e){const t=this.graphic.geometry;if(null==t||"polygon"!==t.type&&"polyline"!==t.type)return;if("polygon"===t.type&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;e instanceof o.Z&&(e=[e]);const i=this.graphic.clone(),s=t.clone();let r=(0,m.nA)(s);const n=[];e instanceof o.Z&&(e=[e]);for(const o of e){const{x:e,y:t}=o.geometry;for(let i=0;i<r.length;i++){const s=r[i];for(let o=0;o<s.length;o++){const[h,a]=s[o];e===h&&t===a&&(n.push({coordinates:r[i][o],componentIndex:i,vertexIndex:o}),r[i].splice(Number(o),1))}}}if("polygon"===s.type)r=r.filter((e=>{if(e.length<2)return!1;const[t,i]=e[0],[s,o]=e[e.length-1];return(2!==e.length||t!==s||i!==o)&&(t===s&&i===o||e.push(e[0]),!0)})),s.rings=r;else{for(const e of r)1===e.length&&r.splice(r.indexOf(e),1);s.paths=r}this.graphic.geometry=s,this.refresh(),this._emitVertexRemoveEvent(e,i,n)}_isVertex(e){return this.vertexGraphics.includes(e)}_isSelected(e){return this._isVertex(e)&&this.selectedVertices.includes(e)}_isMidpoint(e){return this.midpointGraphics.includes(e)}_updateHoverCursor(e){this.view.cursor=this._isMidpoint(e)?"copy":"move"}_updateTooltip(e,t){null!=this._tooltip&&(e?e===this.graphic?this._updateMoveGraphicTooltip(t):this._updateMoveVertexTooltip(t):this._tooltip.clear())}_updateMoveGraphicTooltip(e){var t;const{_tooltip:i,tooltipOptions:s,view:o}=this;if(null==i)return;const r=null!==(t=this._translateGraphicTooltipInfo)&&void 0!==t?t:this._translateGraphicTooltipInfo=new T.$E({tooltipOptions:s});if(r.clear(),r.tooltipOptions=s,e){const{x:t,y:i}=e.origin,s=o.toMap(e),n=o.toMap((0,v.vW)(t,i)),h=(0,H.Qw)(n,s);r.distance=null!=h?h:p.yP}i.info=r}_updateMoveVertexTooltip(e){var t;const{_tooltip:i,graphic:{geometry:s},tooltipOptions:o,view:r}=this;if(null==i)return;const n=null!==(t=this._translateVertexTooltipInfo)&&void 0!==t?t:this._translateVertexTooltipInfo=new T.nk({tooltipOptions:o});if(n.clear(),n.tooltipOptions=o,"polygon"===(null===s||void 0===s?void 0:s.type)?n.area=(0,R.f)(s):"polyline"===(null===s||void 0===s?void 0:s.type)&&(n.totalLength=(0,H.C_)(s)),e){const{x:t,y:i}=e.origin,s=r.toMap(e),o=r.toMap((0,v.vW)(t,i)),h=(0,H.Qw)(o,s);n.distance=null!=h?h:p.yP}i.info=n}_emitMoveStartEvent(e,t){const i=new D(this.graphic,e,t);this.emit("move-start",i),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(i)}_emitMoveEvent(e,t){const i=new L(this.graphic,e,t);this.emit("move",i),this.callbacks.onMove&&this.callbacks.onMove(i)}_emitMoveStopEvent(){const e=this._activeOperationInfo;if(!e)return;const{totalDx:t,totalDy:i}=e,s=new P(this.graphic,t,i);this.emit("move-stop",s),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(s)}_emitReshapeStartEvent(e){const t=new z(this.graphic,e,this.selectedVertices);this.emit("reshape-start",t),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(t)}_emitReshapeEvent(e){const t=new F(this.graphic,e,this.selectedVertices);this.emit("reshape",t),this.callbacks.onReshape&&this.callbacks.onReshape(t)}_emitReshapeStopEvent(e){const t=new U(this.graphic,e,this.selectedVertices);this.emit("reshape-stop",t),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(t)}_emitSelectEvent(e){const t=new W(e);this.emit("select",t),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(t)}_emitDeselectEvent(e){const t=new Y(e);this.emit("deselect",t),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(t)}_emitVertexAddEvent(e,t,i){const s=new N(e,this.graphic,t,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(s)}_emitVertexRemoveEvent(e,t,i){const s=new Q(e,this.graphic,t,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(s)}_logGeometryTypeError(){l.Z.getLogger(this).error(new h.Z("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};(0,s._)([(0,_.Cb)()],J.prototype,"_tooltip",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"_translateGraphicTooltipInfo",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"_translateVertexTooltipInfo",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"callbacks",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"enableMidpoints",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"enableMovement",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"enableVertices",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"graphic",void 0),(0,s._)([(0,_.Cb)({value:!0})],J.prototype,"highlightsEnabled",null),(0,s._)([(0,_.Cb)()],J.prototype,"layer",void 0),(0,s._)([(0,_.Cb)({readOnly:!0})],J.prototype,"midpointGraphics",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"midpointSymbol",void 0),(0,s._)([(0,_.Cb)({readOnly:!0})],J.prototype,"selectedVertices",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"snappingManager",void 0),(0,s._)([(0,_.Cb)({readOnly:!0})],J.prototype,"state",null),(0,s._)([(0,_.Cb)()],J.prototype,"symbols",void 0),(0,s._)([(0,_.Cb)({type:E.Z})],J.prototype,"tooltipOptions",void 0),(0,s._)([(0,_.Cb)({readOnly:!0})],J.prototype,"type",void 0),(0,s._)([(0,_.Cb)({readOnly:!0})],J.prototype,"vertexGraphics",void 0),(0,s._)([(0,_.Cb)()],J.prototype,"view",void 0),J=(0,s._)([(0,y.j)("esri.views.draw.support.Reshape")],J);const K=J}}]);
//# sourceMappingURL=3362.1015d886.chunk.js.map