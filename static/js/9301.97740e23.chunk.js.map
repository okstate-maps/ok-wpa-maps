{"version":3,"file":"static/js/9301.97740e23.chunk.js","mappings":"6QAIwP,SAASA,EAAEC,GAAG,MAAMC,EAAED,EAAEE,SAAS,OAAOD,EAAEE,kBAAkBF,EAAEE,gBAAgBF,EAAEE,gBAAgBC,KAAK,MAAMH,EAAEI,WAAWJ,EAAEI,SAASJ,EAAEI,SAASD,KAAK,MAAMH,EAAEK,YAAYL,EAAEK,UAAUL,EAAEK,UAAUF,KAAK,MAAMH,EAAEM,YAAYN,EAAEM,UAAUN,EAAEM,UAAUH,KAAK,MAAMH,EAAEO,OAAOP,EAAEO,KAAKP,EAAEO,KAAKJ,KAAK,MAAMH,CAAC,CAAC,SAASQ,EAAER,EAAES,GAAG,MAAMX,EAAE,CAAC,EAAE,IAAI,MAAMU,KAAKC,EAAE,CAAC,MAAMC,eAAeD,EAAEE,eAAeC,EAAEC,gBAAgBC,GAAGN,EAAE,IAAI,MAAMA,KAAKM,EAAE,CAAC,MAAMC,GAAGD,GAAGN,EAAEQ,GAAEC,EAAAA,EAAAA,KAAElB,EAAAA,EAAAA,IAAE,GAADmB,OAAIlB,EAAEmB,KAAI,KAAAD,OAAIT,EAAC,iBAAAS,OAAgBJ,KAAMM,EAAEC,EAAAA,EAAEC,SAASd,GAAGY,EAAEG,IAAI,CAACC,IAAIR,EAAEN,eAAeD,EAAEE,eAAeC,IAAId,EAAEW,GAAGX,EAAEW,GAAGgB,KAAKL,GAAGtB,EAAEW,GAAG,CAACW,EAAE,CAAC,CAAC,OAAOtB,CAAC,CAAC,SAASc,EAAEb,EAAEkB,EAAEI,GAAG,IAAIb,EAAE,CAACkB,OAAMjB,EAAAA,EAAAA,GAAE,IAAIV,EAAE2B,MAAMC,EAAE,UAAU7B,EAAEmB,MAAM,OAAOI,IAAIb,EAAE,IAAIa,KAAKb,EAAEkB,MAAM,IAAIL,EAAEK,SAASlB,EAAEkB,UAAS1B,EAAAA,EAAAA,GAAED,EAAEoB,KAAK,oBAAoBX,GAAGoB,MAAM7B,GAAGA,EAAE8B,KAAKC,kBAAkB,CAACC,eAAejB,EAAEf,EAAEkB,EAAER,GAAG,MAAMH,UAAUe,GAAGJ,EAAEnB,EAAE,GAAG,IAAI,MAAMU,KAAKa,EAAEvB,EAAE2B,MAAKzB,EAAAA,EAAAA,GAAED,EAAEoB,KAAK,IAAIX,EAAE,eAAeC,IAAI,OAAOuB,QAAQC,IAAInC,GAAG8B,MAAM7B,GAAGsB,EAAEa,KAAK,CAAClC,EAAEiB,KAAC,CAAKP,eAAeV,EAAEa,gBAAgBd,EAAEkB,GAAGY,KAAKhB,qBAAqB,C","sources":["../node_modules/@arcgis/core/rest/query/operations/queryAttachments.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{addTokenParameter as t}from\"../../../kernel.js\";import o from\"../../../request.js\";import{addProxy as e}from\"../../../core/urlUtils.js\";import{mapParameters as n}from\"../../operations/urlUtils.js\";import r from\"../support/AttachmentInfo.js\";function s(t){const o=t.toJSON();return o.attachmentTypes&&(o.attachmentTypes=o.attachmentTypes.join(\",\")),o.keywords&&(o.keywords=o.keywords.join(\",\")),o.globalIds&&(o.globalIds=o.globalIds.join(\",\")),o.objectIds&&(o.objectIds=o.objectIds.join(\",\")),o.size&&(o.size=o.size.join(\",\")),o}function a(o,n){const s={};for(const a of n){const{parentObjectId:n,parentGlobalId:c,attachmentInfos:m}=a;for(const a of m){const{id:m}=a,p=e(t(`${o.path}/${n}/attachments/${m}`)),i=r.fromJSON(a);i.set({url:p,parentObjectId:n,parentGlobalId:c}),s[n]?s[n].push(i):s[n]=[i]}}return s}function c(t,e,r){let a={query:n({...t.query,f:\"json\",...s(e)})};return r&&(a={...r,...a,query:{...r.query,...a.query}}),o(t.path+\"/queryAttachments\",a).then((t=>t.data.attachmentGroups))}async function m(t,e,n){const{objectIds:r}=e,s=[];for(const a of r)s.push(o(t.path+\"/\"+a+\"/attachments\",n));return Promise.all(s).then((t=>r.map(((o,e)=>({parentObjectId:o,attachmentInfos:t[e].data.attachmentInfos})))))}export{c as executeAttachmentQuery,m as fetchAttachments,a as processAttachmentQueryResult};\n"],"names":["s","t","o","toJSON","attachmentTypes","join","keywords","globalIds","objectIds","size","a","n","parentObjectId","parentGlobalId","c","attachmentInfos","m","id","p","e","concat","path","i","r","fromJSON","set","url","push","query","f","then","data","attachmentGroups","async","Promise","all","map"],"sourceRoot":""}